"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Hashcodes_1 = require("polar-shared/src/util/Hashcodes");
const Attachment_1 = require("./Attachment");
const ISODateTimeStrings_1 = require("polar-shared/src/metadata/ISODateTimeStrings");
let sequence = 0;
class Attachments {
    static createID(created) {
        const id = Hashcodes_1.Hashcodes.create(JSON.stringify({ created, sequence: sequence++ }));
        return id.substring(0, 10);
    }
    static create(type, data) {
        const created = ISODateTimeStrings_1.ISODateTimeStrings.create();
        const id = this.createID(created);
        return new Attachment_1.Attachment({
            id,
            created,
            type,
            data
        });
    }
}
exports.Attachments = Attachments;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0YWNobWVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBdHRhY2htZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBLCtEQUEwRDtBQUMxRCw2Q0FBd0M7QUFDeEMscUZBQW1HO0FBR25HLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQztBQUVqQixNQUFhLFdBQVc7SUFFYixNQUFNLENBQUMsUUFBUSxDQUFDLE9BQTBCO1FBRTdDLE1BQU0sRUFBRSxHQUFHLHFCQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBRzdFLE9BQU8sRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFL0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBWSxFQUFFLElBQVk7UUFFM0MsTUFBTSxPQUFPLEdBQUcsdUNBQWtCLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDNUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVsQyxPQUFPLElBQUksdUJBQVUsQ0FBQztZQUNsQixFQUFFO1lBQ0YsT0FBTztZQUNQLElBQUk7WUFDSixJQUFJO1NBQ1AsQ0FBQyxDQUFDO0lBRVAsQ0FBQztDQUVKO0FBekJELGtDQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlIGEgbmV3IHBhZ2VtYXJrIHdpdGggdGhlIGNyZWF0ZWQgdGltZSwgYW5kIG90aGVyIG1hbmRhdG9yeSBmaWVsZHNcbiAqIGFkZGVkLlxuICpcbiAqL1xuaW1wb3J0IHtIYXNoY29kZXN9IGZyb20gJ3BvbGFyLXNoYXJlZC9zcmMvdXRpbC9IYXNoY29kZXMnO1xuaW1wb3J0IHtBdHRhY2htZW50fSBmcm9tICcuL0F0dGFjaG1lbnQnO1xuaW1wb3J0IHtJU09EYXRlVGltZVN0cmluZywgSVNPRGF0ZVRpbWVTdHJpbmdzfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL21ldGFkYXRhL0lTT0RhdGVUaW1lU3RyaW5ncyc7XG5cbi8vIHVzZWQgdG8gYXZvaWQgY29sbGlzaW9uIGlmIHdlIGNyZWF0ZSBtdWx0aXBsZSB0b28gZmFzdC5cbmxldCBzZXF1ZW5jZSA9IDA7XG5cbmV4cG9ydCBjbGFzcyBBdHRhY2htZW50cyB7XG5cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZUlEKGNyZWF0ZWQ6IElTT0RhdGVUaW1lU3RyaW5nKSB7XG5cbiAgICAgICAgY29uc3QgaWQgPSBIYXNoY29kZXMuY3JlYXRlKEpTT04uc3RyaW5naWZ5KHtjcmVhdGVkLCBzZXF1ZW5jZTogc2VxdWVuY2UrK30pKTtcblxuICAgICAgICAvLyB0cnVuY2F0ZS4gIFdlIGRvbid0IG5lZWQgdGhhdCBtdWNoIHByZWNpc2lvbiBhZ2FpbnN0IGNvbGxpc2lvbi5cbiAgICAgICAgcmV0dXJuIGlkLnN1YnN0cmluZygwLCAxMCk7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZSh0eXBlOiBzdHJpbmcsIGRhdGE6IHN0cmluZyk6IEF0dGFjaG1lbnQge1xuXG4gICAgICAgIGNvbnN0IGNyZWF0ZWQgPSBJU09EYXRlVGltZVN0cmluZ3MuY3JlYXRlKCk7XG4gICAgICAgIGNvbnN0IGlkID0gdGhpcy5jcmVhdGVJRChjcmVhdGVkKTtcblxuICAgICAgICByZXR1cm4gbmV3IEF0dGFjaG1lbnQoe1xuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICBjcmVhdGVkLFxuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbn1cblxuIl19