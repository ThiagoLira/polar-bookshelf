"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const DocInfo_1 = require("./DocInfo");
const ISODateTimeStrings_1 = require("polar-shared/src/metadata/ISODateTimeStrings");
const Optional_1 = require("polar-shared/src/util/ts/Optional");
const UUIDs_1 = require("./UUIDs");
const PagemarkType_1 = require("polar-shared/src/metadata/PagemarkType");
class DocInfos {
    static create(fingerprint, nrPages, filename) {
        const tmp = Object.create(DocInfos.prototype);
        tmp.fingerprint = fingerprint;
        tmp.nrPages = nrPages;
        tmp.added = ISODateTimeStrings_1.ISODateTimeStrings.create();
        tmp.filename = filename;
        tmp.uuid = UUIDs_1.UUIDs.create();
        return new DocInfo_1.DocInfo(tmp);
    }
    static bestTitle(docInfo) {
        return Optional_1.Optional.first(docInfo.title, docInfo.filename)
            .validateString()
            .getOrElse('Untitled');
    }
    static upgrade(docInfo) {
        if (!docInfo) {
            return docInfo;
        }
        if (!docInfo.attachments) {
            docInfo.attachments = {};
        }
        if (!docInfo.pagemarkType) {
            docInfo.pagemarkType = PagemarkType_1.PagemarkType.SINGLE_COLUMN;
        }
        return docInfo;
    }
}
exports.DocInfos = DocInfos;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRG9jSW5mb3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJEb2NJbmZvcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUNsQyxxRkFBZ0Y7QUFDaEYsZ0VBQTJEO0FBQzNELG1DQUE4QjtBQUM5Qix5RUFBb0U7QUFHcEUsTUFBYSxRQUFRO0lBRVYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFtQixFQUFFLE9BQWUsRUFBRSxRQUFpQjtRQUV4RSxNQUFNLEdBQUcsR0FBYSxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUV4RCxHQUFHLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUM5QixHQUFHLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN0QixHQUFHLENBQUMsS0FBSyxHQUFHLHVDQUFrQixDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3hDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3hCLEdBQUcsQ0FBQyxJQUFJLEdBQUcsYUFBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTFCLE9BQU8sSUFBSSxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTVCLENBQUM7SUFNTSxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQWlCO1FBRXJDLE9BQU8sbUJBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssRUFDYixPQUFPLENBQUMsUUFBUSxDQUFDO2FBQ2xDLGNBQWMsRUFBRTthQUNoQixTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFL0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBaUI7UUFFbkMsSUFBSSxDQUFFLE9BQU8sRUFBRTtZQUVYLE9BQU8sT0FBTyxDQUFDO1NBQ2xCO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUU7WUFDdEIsT0FBTyxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7U0FDNUI7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRTtZQUV2QixPQUFPLENBQUMsWUFBWSxHQUFHLDJCQUFZLENBQUMsYUFBYSxDQUFDO1NBQ3JEO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFFbkIsQ0FBQztDQUVKO0FBakRELDRCQWlEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RG9jSW5mb30gZnJvbSAnLi9Eb2NJbmZvJztcbmltcG9ydCB7SVNPRGF0ZVRpbWVTdHJpbmdzfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL21ldGFkYXRhL0lTT0RhdGVUaW1lU3RyaW5ncyc7XG5pbXBvcnQge09wdGlvbmFsfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL3V0aWwvdHMvT3B0aW9uYWwnO1xuaW1wb3J0IHtVVUlEc30gZnJvbSAnLi9VVUlEcyc7XG5pbXBvcnQge1BhZ2VtYXJrVHlwZX0gZnJvbSAncG9sYXItc2hhcmVkL3NyYy9tZXRhZGF0YS9QYWdlbWFya1R5cGUnO1xuaW1wb3J0IHtJRG9jSW5mb30gZnJvbSBcInBvbGFyLXNoYXJlZC9zcmMvbWV0YWRhdGEvSURvY0luZm9cIjtcblxuZXhwb3J0IGNsYXNzIERvY0luZm9zIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlKGZpbmdlcnByaW50OiBzdHJpbmcsIG5yUGFnZXM6IG51bWJlciwgZmlsZW5hbWU/OiBzdHJpbmcpIHtcblxuICAgICAgICBjb25zdCB0bXA6IElEb2NJbmZvID0gT2JqZWN0LmNyZWF0ZShEb2NJbmZvcy5wcm90b3R5cGUpO1xuXG4gICAgICAgIHRtcC5maW5nZXJwcmludCA9IGZpbmdlcnByaW50O1xuICAgICAgICB0bXAubnJQYWdlcyA9IG5yUGFnZXM7XG4gICAgICAgIHRtcC5hZGRlZCA9IElTT0RhdGVUaW1lU3RyaW5ncy5jcmVhdGUoKTtcbiAgICAgICAgdG1wLmZpbGVuYW1lID0gZmlsZW5hbWU7XG4gICAgICAgIHRtcC51dWlkID0gVVVJRHMuY3JlYXRlKCk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBEb2NJbmZvKHRtcCk7XG5cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJlc3QgcG9zc2libGUgdGl0bGUgZnJvbSB0aGUgZG9jIGluZm8gYnV0IGZhbGwgYmFjayB0byBmaWxlbmFtZVxuICAgICAqIGlmIG9uZSBpc24ndCBhdmFpbGFibGUgYW5kIHRoZW4gJ1VudGl0bGVkJyBhZnRlciB0aGF0LlxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgYmVzdFRpdGxlKGRvY0luZm86IElEb2NJbmZvKSB7XG5cbiAgICAgICAgcmV0dXJuIE9wdGlvbmFsLmZpcnN0KGRvY0luZm8udGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2NJbmZvLmZpbGVuYW1lKVxuICAgICAgICAgICAgLnZhbGlkYXRlU3RyaW5nKClcbiAgICAgICAgICAgIC5nZXRPckVsc2UoJ1VudGl0bGVkJyk7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHVwZ3JhZGUoZG9jSW5mbzogSURvY0luZm8pIHtcblxuICAgICAgICBpZiAoISBkb2NJbmZvKSB7XG4gICAgICAgICAgICAvLyByZXR1cm4gd2hhdGV2ZXIgd2Ugd2VyZSBnaXZlbiAoZWl0aGVyIHVuZGVmaW5lZCBvciBudWxsKVxuICAgICAgICAgICAgcmV0dXJuIGRvY0luZm87XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWRvY0luZm8uYXR0YWNobWVudHMpIHtcbiAgICAgICAgICAgIGRvY0luZm8uYXR0YWNobWVudHMgPSB7fTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghZG9jSW5mby5wYWdlbWFya1R5cGUpIHtcbiAgICAgICAgICAgIC8vIGxvZy5kZWJ1ZyhcIkRvY0luZm8gaGFzIG5vIHBhZ2VtYXJrVHlwZS4uLiBBZGRpbmcgZGVmYXVsdCBvZiBTSU5HTEVfQ09MVU1OXCIpO1xuICAgICAgICAgICAgZG9jSW5mby5wYWdlbWFya1R5cGUgPSBQYWdlbWFya1R5cGUuU0lOR0xFX0NPTFVNTjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBkb2NJbmZvO1xuXG4gICAgfVxuXG59XG4iXX0=