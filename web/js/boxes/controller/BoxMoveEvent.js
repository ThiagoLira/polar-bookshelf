"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Rect_1 = require("../../Rect");
const Preconditions_1 = require("polar-shared/src/Preconditions");
class BoxMoveEvent {
    constructor(opts) {
        this.state = "pending";
        this.type = opts.type;
        this.restrictionRect = opts.restrictionRect;
        this.boxRect = opts.boxRect;
        this.id = opts.id;
        this.target = opts.target;
        this.state = "pending";
        Object.assign(this, opts);
        Preconditions_1.Preconditions.assertInstanceOf(this.boxRect, Rect_1.Rect, "boxRect");
    }
}
exports.BoxMoveEvent = BoxMoveEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm94TW92ZUV2ZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQm94TW92ZUV2ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQWdDO0FBQ2hDLGtFQUE2RDtBQUU3RCxNQUFhLFlBQVk7SUE0Q3JCLFlBQVksSUFBUztRQUZkLFVBQUssR0FBVyxTQUFTLENBQUM7UUFJN0IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztRQUV2QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUUxQiw2QkFBYSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsV0FBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRWxFLENBQUM7Q0FFSjtBQTNERCxvQ0EyREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JlY3R9IGZyb20gJy4uLy4uL1JlY3QnO1xuaW1wb3J0IHtQcmVjb25kaXRpb25zfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL1ByZWNvbmRpdGlvbnMnO1xuXG5leHBvcnQgY2xhc3MgQm94TW92ZUV2ZW50IHtcblxuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIHRoZSBldmVudC4gIEVpdGhlciAncmVzaXplJyBvciAnZHJhZydcbiAgICAgKi9cbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHJlc3RyaWN0aW9uUmVjdCBSZWN0IG9mIHRoZSBib3ggd2UgbW92ZWQuICBUaGlzIGlzIHRoZSBwYXJlbnRcbiAgICAgKiBSZWN0LlxuICAgICAqXG4gICAgICovXG4gICAgcHVibGljIHJlc3RyaWN0aW9uUmVjdDogUmVjdDtcblxuICAgIC8qKlxuICAgICAqIFRoZSBSZWN0IG9mIHRoZSBib3ggd2UgbW92ZWQuICBUaGlzIGlzIHRoZSBmaW5hbCBwb3NpdGlvbiBvZiB0aGUgYm94XG4gICAgICogb25jZSB3ZSdyZSBkb25lIG1vdmluZyBpdC5cbiAgICAgKlxuICAgICAqL1xuICAgIHB1YmxpYyBib3hSZWN0OiBSZWN0O1xuXG4gICAgLyoqXG4gICAgICogVGhlIElEIG9mIHRoZSBib3ggd2UgbW92ZWQuXG4gICAgICpcbiAgICAgKi9cbiAgICBwdWJsaWMgaWQ6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFRoZSBlbGVtZW50IGJlaW5nIG1vdmVkLlxuICAgICAqXG4gICAgICovXG4gICAgcHVibGljIHRhcmdldDogSFRNTEVsZW1lbnQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc3RhdGUgb2YgdGhlIGJveCBtb3ZlbWVudC4gU3RhdGVzIGFyZTpcbiAgICAgKlxuICAgICAqIHBlbmRpbmc6IFRoZSBib3ggaXMgc3RpbGwgYmVpbmcgZHJhd24gYnV0IHRoZSB1c2VyIGhhc24ndCBmaW5pc2hlZFxuICAgICAqIG1vdmluZyBpdDpcbiAgICAgKlxuICAgICAqIGNvbXBsZXRlZDogVGhlIGJveCBtb3ZlIG9wZXJhdGlvbiBpcyBjb21wbGV0ZWQgYW5kIGlzIGluIGl0cyBmaW5hbCBwb3NpdGlvbi5cbiAgICAgKlxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0ZTogc3RyaW5nID0gXCJwZW5kaW5nXCI7XG5cbiAgICBjb25zdHJ1Y3RvcihvcHRzOiBhbnkpIHtcblxuICAgICAgICB0aGlzLnR5cGUgPSBvcHRzLnR5cGU7XG4gICAgICAgIHRoaXMucmVzdHJpY3Rpb25SZWN0ID0gb3B0cy5yZXN0cmljdGlvblJlY3Q7XG4gICAgICAgIHRoaXMuYm94UmVjdCA9IG9wdHMuYm94UmVjdDtcbiAgICAgICAgdGhpcy5pZCA9IG9wdHMuaWQ7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gb3B0cy50YXJnZXQ7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBcInBlbmRpbmdcIjtcblxuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIG9wdHMpO1xuXG4gICAgICAgIFByZWNvbmRpdGlvbnMuYXNzZXJ0SW5zdGFuY2VPZih0aGlzLmJveFJlY3QsIFJlY3QsIFwiYm94UmVjdFwiKTtcblxuICAgIH1cblxufVxuXG4iXX0=