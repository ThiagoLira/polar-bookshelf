"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Functions_1 = require("polar-shared/src/util/Functions");
const TreeView_1 = require("./TreeView");
class TreeState {
    constructor(onSelected, onDropped = Functions_1.NULL_FUNCTION) {
        this.onSelected = onSelected;
        this.onDropped = onDropped;
        this.closed = new TreeView_1.MarkSet();
        this.selected = new TreeView_1.MarkSet();
        this.filter = "";
        this.index = {};
        this.tags = [];
    }
    dispatchSelected() {
        const selectedFolders = this.selected.keys();
        const selectedTags = this.tags.map(current => current.id);
        const selected = [...selectedTags, ...selectedFolders];
        this.onSelected(selected);
    }
    dispatchDropped(node) {
        this.onDropped(node);
    }
}
exports.TreeState = TreeState;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJlZVN0YXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVHJlZVN0YXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0RBQThEO0FBRzlELHlDQUFtQztBQU1uQyxNQUFhLFNBQVM7SUFJbEIsWUFBNkIsVUFBa0QsRUFDbEQsWUFBK0IseUJBQWE7UUFENUMsZUFBVSxHQUFWLFVBQVUsQ0FBd0M7UUFDbEQsY0FBUyxHQUFULFNBQVMsQ0FBbUM7UUFJekQsV0FBTSxHQUFHLElBQUksa0JBQU8sRUFBRSxDQUFDO1FBTXZCLGFBQVEsR0FBRyxJQUFJLGtCQUFPLEVBQUUsQ0FBQztRQUt6QixXQUFNLEdBQUcsRUFBRSxDQUFDO1FBRVosVUFBSyxHQUFrQyxFQUFFLENBQUM7UUFLbkQsU0FBSSxHQUF1QixFQUFFLENBQUM7SUFwQnJDLENBQUM7SUFzQk0sZ0JBQWdCO1FBRW5CLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDN0MsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFMUQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxHQUFHLFlBQVksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDO1FBRXZELElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFOUIsQ0FBQztJQUVNLGVBQWUsQ0FBQyxJQUFPO1FBQzFCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQztDQUVKO0FBNUNELDhCQTRDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TlVMTF9GVU5DVElPTn0gZnJvbSBcInBvbGFyLXNoYXJlZC9zcmMvdXRpbC9GdW5jdGlvbnNcIjtcbmltcG9ydCB7VHJlZU5vZGV9IGZyb20gXCIuL1RyZWVOb2RlXCI7XG5pbXBvcnQge1RhZywgVGFnU3RyfSBmcm9tIFwicG9sYXItc2hhcmVkL3NyYy90YWdzL1RhZ3NcIjtcbmltcG9ydCB7TWFya1NldH0gZnJvbSBcIi4vVHJlZVZpZXdcIjtcblxuLyoqXG4gKiBBIHN0YXRlIG9iamVjdCBmb3IgdGhlIGVudGlyZSB0cmVlIHRvIGtlZXAgYW4gaW5kZXggb2YgZXhwYW5kZWQvY29sbGFwc2VkXG4gKiBub2RlcywgZXRjLlxuICovXG5leHBvcnQgY2xhc3MgVHJlZVN0YXRlPFY+IHtcblxuICAgIC8qKlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgb25TZWxlY3RlZDogKG5vZGVzOiBSZWFkb25seUFycmF5PFRhZ1N0cj4pID0+IHZvaWQsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSByZWFkb25seSBvbkRyb3BwZWQ6IChub2RlOiBWKSA9PiB2b2lkID0gTlVMTF9GVU5DVElPTikge1xuXG4gICAgfVxuXG4gICAgcHVibGljIHJlYWRvbmx5IGNsb3NlZCA9IG5ldyBNYXJrU2V0KCk7XG5cblxuICAgIC8qKlxuICAgICAqIFRoZSBsaXN0IG9mIHRoZSBub2RlcyB0aGF0IGFyZSBzZWxlY3RlZCBieSBpZFxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBzZWxlY3RlZCA9IG5ldyBNYXJrU2V0KCk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudGx5IGFwcGxpZWQgZmlsdGVyIGZvciB0aGUgcGF0aCB3ZSdyZSBzZWFyY2hpbmcgZm9yLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBmaWx0ZXIgPSBcIlwiO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IGluZGV4OiB7IFtpZDogc3RyaW5nXTogVHJlZU5vZGU8Vj4gfSA9IHt9O1xuXG4gICAgLyoqXG4gICAgICogSnVzdCB0aGUgdXNlciB0YWdzIHRoYXQgdGhlIHVzZXIgaGFzIHNlbGVjdGVkLlxuICAgICAqL1xuICAgIHB1YmxpYyB0YWdzOiBSZWFkb25seUFycmF5PFRhZz4gPSBbXTtcblxuICAgIHB1YmxpYyBkaXNwYXRjaFNlbGVjdGVkKCkge1xuXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkRm9sZGVycyA9IHRoaXMuc2VsZWN0ZWQua2V5cygpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZFRhZ3MgPSB0aGlzLnRhZ3MubWFwKGN1cnJlbnQgPT4gY3VycmVudC5pZCk7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSBbLi4uc2VsZWN0ZWRUYWdzLCAuLi5zZWxlY3RlZEZvbGRlcnNdO1xuXG4gICAgICAgIHRoaXMub25TZWxlY3RlZChzZWxlY3RlZCk7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgZGlzcGF0Y2hEcm9wcGVkKG5vZGU6IFYpIHtcbiAgICAgICAgdGhpcy5vbkRyb3BwZWQobm9kZSk7XG4gICAgfVxuXG59XG4iXX0=