"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Logger_1 = require("polar-shared/src/logger/Logger");
const reactstrap_1 = require("reactstrap");
const SimpleTooltipEx_1 = require("../tooltip/SimpleTooltipEx");
const log = Logger_1.Logger.create();
class AccountDropdown extends react_1.default.PureComponent {
    constructor(props) {
        super(props);
    }
    render() {
        return (react_1.default.createElement("div", null,
            react_1.default.createElement(reactstrap_1.UncontrolledDropdown, { id: "cloud-sync-dropdown", direction: "down", size: "md" },
                react_1.default.createElement(reactstrap_1.DropdownToggle, { color: "primary", caret: true },
                    react_1.default.createElement("i", { className: "fas fa-user", style: { marginRight: '5px' } }),
                    "Cloud Sync"),
                react_1.default.createElement(reactstrap_1.DropdownMenu, { className: "shadow", right: true },
                    react_1.default.createElement(SimpleTooltipEx_1.SimpleTooltipEx, { placement: "left", show: 0, text: `Invite users to Polar. If they
                                                sign up and use cloud sync we
                                                will give you a free month of
                                                cloud sync.` },
                        react_1.default.createElement(reactstrap_1.DropdownItem, { id: "cloud-sync-invite-users", size: "md", onClick: () => this.props.onInvite() },
                            react_1.default.createElement("i", { className: "fas fa-user-plus mr-1" }),
                            "Invite Users")),
                    react_1.default.createElement(reactstrap_1.DropdownItem, { divider: true }),
                    react_1.default.createElement(SimpleTooltipEx_1.SimpleTooltipEx, { placement: "left", show: 0, text: `Logout of cloud sync. Your data
                                                will no longer be synchronized
                                                between your devices.` },
                        react_1.default.createElement(reactstrap_1.DropdownItem, { id: "cloud-sync-logout", size: "md", onClick: () => this.props.onLogout(), className: "text-danger" },
                            react_1.default.createElement("i", { className: "fas fa-sign-out-alt mr-1" }),
                            "Logout"))))));
    }
}
exports.AccountDropdown = AccountDropdown;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudERyb3Bkb3duLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQWNjb3VudERyb3Bkb3duLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLGtEQUEwQjtBQUMxQiwyREFBc0Q7QUFDdEQsMkNBQTRGO0FBRTVGLGdFQUEyRDtBQUUzRCxNQUFNLEdBQUcsR0FBRyxlQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFNUIsTUFBYSxlQUFnQixTQUFRLGVBQUssQ0FBQyxhQUE2QjtJQUVwRSxZQUFZLEtBQWE7UUFDckIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRWpCLENBQUM7SUFFTSxNQUFNO1FBRVQsT0FBTyxDQUNIO1lBRUksOEJBQUMsaUNBQW9CLElBQUMsRUFBRSxFQUFDLHFCQUFxQixFQUN4QixTQUFTLEVBQUMsTUFBTSxFQUNoQixJQUFJLEVBQUMsSUFBSTtnQkFFM0IsOEJBQUMsMkJBQWMsSUFBQyxLQUFLLEVBQUMsU0FBUyxFQUFDLEtBQUs7b0JBQ2pDLHFDQUFHLFNBQVMsRUFBQyxhQUFhLEVBQUMsS0FBSyxFQUFFLEVBQUMsV0FBVyxFQUFFLEtBQUssRUFBQyxHQUFHO2lDQUc1QztnQkFDakIsOEJBQUMseUJBQVksSUFBQyxTQUFTLEVBQUMsUUFBUSxFQUFDLEtBQUs7b0JBRWxDLDhCQUFDLGlDQUFlLElBQUMsU0FBUyxFQUFDLE1BQU0sRUFDaEIsSUFBSSxFQUFFLENBQUMsRUFDUCxJQUFJLEVBQUU7Ozs0REFHYTt3QkFFaEMsOEJBQUMseUJBQVksSUFBQyxFQUFFLEVBQUMseUJBQXlCLEVBQzVCLElBQUksRUFBQyxJQUFJLEVBQ1QsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFOzRCQUU5QyxxQ0FBRyxTQUFTLEVBQUMsdUJBQXVCLEdBQUU7MkNBSTNCLENBRUQ7b0JBRWxCLDhCQUFDLHlCQUFZLElBQUMsT0FBTyxTQUFHO29CQUV4Qiw4QkFBQyxpQ0FBZSxJQUFDLFNBQVMsRUFBQyxNQUFNLEVBQ2hCLElBQUksRUFBRSxDQUFDLEVBQ1AsSUFBSSxFQUFFOztzRUFFdUI7d0JBRTFDLDhCQUFDLHlCQUFZLElBQUMsRUFBRSxFQUFDLG1CQUFtQixFQUN0QixJQUFJLEVBQUMsSUFBSSxFQUNULE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUNwQyxTQUFTLEVBQUMsYUFBYTs0QkFFakMscUNBQUcsU0FBUyxFQUFDLDBCQUEwQixHQUFFO3FDQUk5QixDQUVELENBRVAsQ0FDSSxDQUVyQixDQUNULENBQUM7SUFFTixDQUFDO0NBRUo7QUF2RUQsMENBdUVDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IHJlYWN0L25vLW11bHRpLWNvbXA6IDAsIHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0xvZ2dlcn0gZnJvbSAncG9sYXItc2hhcmVkL3NyYy9sb2dnZXIvTG9nZ2VyJztcbmltcG9ydCB7RHJvcGRvd25JdGVtLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duVG9nZ2xlLCBVbmNvbnRyb2xsZWREcm9wZG93bn0gZnJvbSAncmVhY3RzdHJhcCc7XG5pbXBvcnQge1NpbXBsZVRvb2x0aXB9IGZyb20gJy4uL3Rvb2x0aXAvU2ltcGxlVG9vbHRpcCc7XG5pbXBvcnQge1NpbXBsZVRvb2x0aXBFeH0gZnJvbSAnLi4vdG9vbHRpcC9TaW1wbGVUb29sdGlwRXgnO1xuXG5jb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbmV4cG9ydCBjbGFzcyBBY2NvdW50RHJvcGRvd24gZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PElQcm9wcywgSVN0YXRlPiB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogSVByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgIH1cblxuICAgIHB1YmxpYyByZW5kZXIoKSB7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG5cbiAgICAgICAgICAgICAgICA8VW5jb250cm9sbGVkRHJvcGRvd24gaWQ9XCJjbG91ZC1zeW5jLWRyb3Bkb3duXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uPVwiZG93blwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJtZFwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDxEcm9wZG93blRvZ2dsZSBjb2xvcj1cInByaW1hcnlcIiBjYXJldD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhcyBmYS11c2VyXCIgc3R5bGU9e3ttYXJnaW5SaWdodDogJzVweCd9fS8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIENsb3VkIFN5bmNcbiAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93blRvZ2dsZT5cbiAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duTWVudSBjbGFzc05hbWU9XCJzaGFkb3dcIiByaWdodD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPFNpbXBsZVRvb2x0aXBFeCBwbGFjZW1lbnQ9XCJsZWZ0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdz17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17YEludml0ZSB1c2VycyB0byBQb2xhci4gSWYgdGhleVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2lnbiB1cCBhbmQgdXNlIGNsb3VkIHN5bmMgd2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgZ2l2ZSB5b3UgYSBmcmVlIG1vbnRoIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG91ZCBzeW5jLmB9PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbSBpZD1cImNsb3VkLXN5bmMtaW52aXRlLXVzZXJzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJtZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLm9uSW52aXRlKCl9PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhcyBmYS11c2VyLXBsdXMgbXItMVwiLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbnZpdGUgVXNlcnNcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRHJvcGRvd25JdGVtPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8L1NpbXBsZVRvb2x0aXBFeD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbSBkaXZpZGVyIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTaW1wbGVUb29sdGlwRXggcGxhY2VtZW50PVwibGVmdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c9ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e2BMb2dvdXQgb2YgY2xvdWQgc3luYy4gWW91ciBkYXRhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIG5vIGxvbmdlciBiZSBzeW5jaHJvbml6ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJldHdlZW4geW91ciBkZXZpY2VzLmB9PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbSBpZD1cImNsb3VkLXN5bmMtbG9nb3V0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJtZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLm9uTG9nb3V0KCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWRhbmdlclwiPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhcyBmYS1zaWduLW91dC1hbHQgbXItMVwiLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dvdXRcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRHJvcGRvd25JdGVtPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8L1NpbXBsZVRvb2x0aXBFeD5cblxuICAgICAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duTWVudT5cbiAgICAgICAgICAgICAgICA8L1VuY29udHJvbGxlZERyb3Bkb3duPlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcblxuICAgIH1cblxufVxuXG5pbnRlcmZhY2UgSVByb3BzIHtcbiAgICByZWFkb25seSBvbkludml0ZTogKCkgPT4gdm9pZDtcbiAgICByZWFkb25seSBvbkxvZ291dDogKCkgPT4gdm9pZDtcbn1cblxuaW50ZXJmYWNlIElTdGF0ZSB7XG59XG4iXX0=