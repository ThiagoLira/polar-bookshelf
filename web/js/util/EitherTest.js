"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const Either_1 = require("./Either");
const Assertions_1 = require("../test/Assertions");
describe('Either', function () {
    it("basic", function () {
        const values = [];
        const myFunction = (either) => {
            either.handle((left) => values.push(left), (right) => values.push(right));
        };
        myFunction(Either_1.Either.ofLeft("left"));
        myFunction(Either_1.Either.ofRight(101));
        Assertions_1.assertJSON(values, [
            "left",
            101
        ]);
    });
    it("convertLeftToRight", function () {
        const either0 = Either_1.Either.ofLeft('123');
        const either1 = Either_1.Either.ofRight(123);
        chai_1.assert.equal(either0.convertLeftToRight(value => Number.parseInt(value)), 123);
        chai_1.assert.equal(either1.convertLeftToRight(value => Number.parseInt(value)), 123);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWl0aGVyVGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkVpdGhlclRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBNEI7QUFDNUIscUNBQWdDO0FBQ2hDLG1EQUE4QztBQUU5QyxRQUFRLENBQUMsUUFBUSxFQUFFO0lBRWYsRUFBRSxDQUFDLE9BQU8sRUFBRTtRQUVSLE1BQU0sTUFBTSxHQUFVLEVBQUUsQ0FBQztRQUV6QixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQThCLEVBQUUsRUFBRTtZQUVsRCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUMzQixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRWpELENBQUMsQ0FBQztRQUVGLFVBQVUsQ0FBQyxlQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDbEMsVUFBVSxDQUFDLGVBQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUVoQyx1QkFBVSxDQUFDLE1BQU0sRUFBRTtZQUNmLE1BQU07WUFDTixHQUFHO1NBQ04sQ0FBQyxDQUFDO0lBRVAsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsb0JBQW9CLEVBQUU7UUFFckIsTUFBTSxPQUFPLEdBQTJCLGVBQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0QsTUFBTSxPQUFPLEdBQTJCLGVBQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFNUQsYUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDL0UsYUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFFbkYsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXNzZXJ0fSBmcm9tICdjaGFpJztcbmltcG9ydCB7RWl0aGVyfSBmcm9tICcuL0VpdGhlcic7XG5pbXBvcnQge2Fzc2VydEpTT059IGZyb20gJy4uL3Rlc3QvQXNzZXJ0aW9ucyc7XG5cbmRlc2NyaWJlKCdFaXRoZXInLCBmdW5jdGlvbigpIHtcblxuICAgIGl0KFwiYmFzaWNcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgY29uc3QgdmFsdWVzOiBhbnlbXSA9IFtdO1xuXG4gICAgICAgIGNvbnN0IG15RnVuY3Rpb24gPSAoZWl0aGVyOiBFaXRoZXI8c3RyaW5nLCBudW1iZXI+KSA9PiB7XG5cbiAgICAgICAgICAgIGVpdGhlci5oYW5kbGUoKGxlZnQpID0+IHZhbHVlcy5wdXNoKGxlZnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAocmlnaHQpID0+IHZhbHVlcy5wdXNoKHJpZ2h0KSk7XG5cbiAgICAgICAgfTtcblxuICAgICAgICBteUZ1bmN0aW9uKEVpdGhlci5vZkxlZnQoXCJsZWZ0XCIpKTtcbiAgICAgICAgbXlGdW5jdGlvbihFaXRoZXIub2ZSaWdodCgxMDEpKTtcblxuICAgICAgICBhc3NlcnRKU09OKHZhbHVlcywgW1xuICAgICAgICAgICAgXCJsZWZ0XCIsXG4gICAgICAgICAgICAxMDFcbiAgICAgICAgXSk7XG5cbiAgICB9KTtcblxuICAgIGl0KFwiY29udmVydExlZnRUb1JpZ2h0XCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGNvbnN0IGVpdGhlcjA6IEVpdGhlcjxzdHJpbmcsIG51bWJlcj4gPSBFaXRoZXIub2ZMZWZ0KCcxMjMnKTtcbiAgICAgICAgY29uc3QgZWl0aGVyMTogRWl0aGVyPHN0cmluZywgbnVtYmVyPiA9IEVpdGhlci5vZlJpZ2h0KDEyMyk7XG5cbiAgICAgICAgYXNzZXJ0LmVxdWFsKGVpdGhlcjAuY29udmVydExlZnRUb1JpZ2h0KHZhbHVlID0+IE51bWJlci5wYXJzZUludCh2YWx1ZSkpLCAxMjMpO1xuICAgICAgICBhc3NlcnQuZXF1YWwoZWl0aGVyMS5jb252ZXJ0TGVmdFRvUmlnaHQodmFsdWUgPT4gTnVtYmVyLnBhcnNlSW50KHZhbHVlKSksIDEyMyk7XG5cbiAgICB9KTtcblxufSk7XG4iXX0=