"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const LazyComponents_1 = require("./LazyComponents");
class LazyComponent extends React.Component {
    constructor(props, context) {
        super(props, context);
    }
    shouldComponentUpdate(nextProps, nextState, nextContext) {
        if (!LazyComponents_1.lazyObjEquals(this.props, nextProps)) {
            return true;
        }
        if (!LazyComponents_1.lazyObjEquals(this.state, nextState)) {
            return true;
        }
        return false;
    }
}
exports.LazyComponent = LazyComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGF6eUNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkxhenlDb21wb25lbnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDZDQUErQjtBQUcvQixxREFBK0M7QUFNL0MsTUFBc0IsYUFBd0QsU0FBUSxLQUFLLENBQUMsU0FBZTtJQXFCdkcsWUFBc0IsS0FBUSxFQUFFLE9BQVk7UUFDeEMsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRU0scUJBQXFCLENBQUMsU0FBOEIsRUFBRSxTQUE4QixFQUFFLFdBQWdCO1FBRXpHLElBQUksQ0FBRSw4QkFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLEVBQUU7WUFDeEMsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELElBQUksQ0FBRSw4QkFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLEVBQUU7WUFDeEMsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELE9BQU8sS0FBSyxDQUFDO0lBRWpCLENBQUM7Q0FFSjtBQXZDRCxzQ0F1Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0xhenlQcm9wc30gZnJvbSAnLi9MYXp5Q29tcG9uZW50cyc7XG5pbXBvcnQge0xhenlTdGF0ZX0gZnJvbSAnLi9MYXp5Q29tcG9uZW50cyc7XG5pbXBvcnQge2xhenlPYmpFcXVhbHN9IGZyb20gJy4vTGF6eUNvbXBvbmVudHMnO1xuXG4vKipcbiAqIENvbXBvbmVudCB0aGF0IGhhcyBhIHNtYXJ0IGltcGxlbWVudGF0aW9uIG9mIHNob3VsZENvbXBvbmVudFVwZGF0ZSB0aGF0XG4gKiBzdXBwb3J0cyBwcmltaXRpdmVUeXBlc1xuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTGF6eUNvbXBvbmVudDxMIGV4dGVuZHMgTGF6eVByb3BzLCBTIGV4dGVuZHMgTGF6eVN0YXRlPiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxMLCBTPiB7XG5cbiAgICAvLyBUT0RPOiBvbmUgZGVzaWduIGZsYXcgaGVyZSBpcyB0aGF0IHdlJ3JlIGNvbXBhcmluZyBvbiB0aGUgb2JqZWN0IGFuZFxuICAgIC8vIGFzc3VtaW5nIHRoYXQgaXQgaGFzIE5PIGFkZGl0aW9uYWwgcHJvcGVydGllcyB3aGljaCBtaWdodCBub3QgYmUgY29ycmVjdC5cbiAgICAvL1xuICAgIC8vIEkgbWlnaHQgd2FudCB0byByZWZhY3RvciB0aGlzIHRvIGluY2x1ZGUganVzdCB0aGUga2V5cyBvZiBhIHNwZWNpZmljXG4gICAgLy8gb2JqZWN0IGJ1dCBJIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gbWFrZSB0aGlzIE9PIHNvIHRoYXQgSSBjYW4ganVzdFxuICAgIC8vIHNwZWNpZnkga2V5c09mIHVzaW5nIFR5cGVzY3JpcHQuXG4gICAgLy9cbiAgICAvLyBpbXBsZW1lbnRpbmcgYSBlcXVhbHMgZnVuY3Rpb24gc2hvdWxkIGp1c3QgYmUgYXMgc2ltcGxlIGFzIGEgbG9vcCBvdmVyIHRoZVxuICAgIC8vIGtleXMgYW5kIHRoZW4gZG8gYW4gb2JqZWN0RXF1YWxzIGZvciBlYWNoIG9uZS4gIFdlIGp1c3QgaGF2ZSB0byBoYW5kbGVcbiAgICAvLyB0aGUgbnVsbCBhbmQgdW5kZWZpbmVkIHZhbHVlcyBwcm9wZXJseS5cbiAgICAvL1xuICAgIC8vIHRoaXMgaXMgZ29pbmcgdG8gYmUgbmVjZXNzYXJ5IHNvIHRoYXQgSSBjYW4gcGFzcyBzdWIgc3ViLXByb3BlcnRpZXMgdmlhIEpTWFxuICAgIC8vIHJlc3Qgb3BlcmF0b3JzIGxpa2U6XG4gICAgLy9cbiAgICAvLyA8Rm9vIHsuLi50aGlzLnByb3BzfS8+XG4gICAgLy9cbiAgICAvLyBUaGlzIGlzIGdvaW5nIHRvIGJlIG11Y2ggZWFzaWVyIHRoYW4gcGFzc2luZyB0aGUgdmFsdWVzIGFyb3VuZCBkaXJlY3RseVxuICAgIC8vIGZvciBjb25zdHJhaW5lZCB0eXBlcy5cblxuICAgIHByb3RlY3RlZCBjb25zdHJ1Y3Rvcihwcm9wczogTCwgY29udGV4dDogYW55KSB7XG4gICAgICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wczogUmVhZG9ubHk8TGF6eVByb3BzPiwgbmV4dFN0YXRlOiBSZWFkb25seTxMYXp5U3RhdGU+LCBuZXh0Q29udGV4dDogYW55KTogYm9vbGVhbiB7XG5cbiAgICAgICAgaWYgKCEgbGF6eU9iakVxdWFscyh0aGlzLnByb3BzLCBuZXh0UHJvcHMpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghIGxhenlPYmpFcXVhbHModGhpcy5zdGF0ZSwgbmV4dFN0YXRlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICB9XG5cbn1cblxuIl19