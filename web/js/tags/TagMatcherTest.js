"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const Tags_1 = require("polar-shared/src/tags/Tags");
const TagMatcher_1 = require("./TagMatcher");
function createTags(...tags) {
    return tags.map(current => Tags_1.Tags.create(current));
}
function runMatcher(queryTagStrs, docTagsStrs) {
    const queryTags = createTags(...queryTagStrs);
    const docTags = createTags(...docTagsStrs);
    const tagMatcherFactory = new TagMatcher_1.TagMatcherFactory(queryTags);
    const tagMatcher = tagMatcherFactory.create(docTags);
    return tagMatcher.matches();
}
describe('TagMatcher', function () {
    it("basic matching folder", function () {
        chai_1.assert.equal(runMatcher(['/foo'], ['/foo/bar']), true);
    });
    it("basic matching tag", function () {
        chai_1.assert.equal(runMatcher(['linux'], ['linux']), true);
    });
    it("folder and tags", function () {
        chai_1.assert.equal(runMatcher(['/foo', 'linux'], ['/foo/bar', 'linux']), true);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFnTWF0Y2hlclRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJUYWdNYXRjaGVyVGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE0QjtBQUM1QixxREFBZ0Q7QUFDaEQsNkNBQStDO0FBRy9DLFNBQVMsVUFBVSxDQUFDLEdBQUcsSUFBYztJQUNqQyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxXQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDckQsQ0FBQztBQUVELFNBQVMsVUFBVSxDQUFDLFlBQXNCLEVBQUUsV0FBcUI7SUFFN0QsTUFBTSxTQUFTLEdBQUcsVUFBVSxDQUFDLEdBQUcsWUFBWSxDQUFDLENBQUM7SUFDOUMsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUM7SUFFM0MsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLDhCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRTNELE1BQU0sVUFBVSxHQUFHLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVyRCxPQUFPLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUVoQyxDQUFDO0FBRUQsUUFBUSxDQUFDLFlBQVksRUFBRTtJQUVuQixFQUFFLENBQUMsdUJBQXVCLEVBQUU7UUFFeEIsYUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFM0QsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsb0JBQW9CLEVBQUU7UUFFckIsYUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFekQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsaUJBQWlCLEVBQUU7UUFFbEIsYUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUU3RSxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHthc3NlcnR9IGZyb20gJ2NoYWknO1xuaW1wb3J0IHtUYWdzfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL3RhZ3MvVGFncyc7XG5pbXBvcnQge1RhZ01hdGNoZXJGYWN0b3J5fSBmcm9tICcuL1RhZ01hdGNoZXInO1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZVRhZ3MoLi4udGFnczogc3RyaW5nW10pIHtcbiAgICByZXR1cm4gdGFncy5tYXAoY3VycmVudCA9PiBUYWdzLmNyZWF0ZShjdXJyZW50KSk7XG59XG5cbmZ1bmN0aW9uIHJ1bk1hdGNoZXIocXVlcnlUYWdTdHJzOiBzdHJpbmdbXSwgZG9jVGFnc1N0cnM6IHN0cmluZ1tdKSB7XG5cbiAgICBjb25zdCBxdWVyeVRhZ3MgPSBjcmVhdGVUYWdzKC4uLnF1ZXJ5VGFnU3Rycyk7XG4gICAgY29uc3QgZG9jVGFncyA9IGNyZWF0ZVRhZ3MoLi4uZG9jVGFnc1N0cnMpO1xuXG4gICAgY29uc3QgdGFnTWF0Y2hlckZhY3RvcnkgPSBuZXcgVGFnTWF0Y2hlckZhY3RvcnkocXVlcnlUYWdzKTtcblxuICAgIGNvbnN0IHRhZ01hdGNoZXIgPSB0YWdNYXRjaGVyRmFjdG9yeS5jcmVhdGUoZG9jVGFncyk7XG5cbiAgICByZXR1cm4gdGFnTWF0Y2hlci5tYXRjaGVzKCk7XG5cbn1cblxuZGVzY3JpYmUoJ1RhZ01hdGNoZXInLCBmdW5jdGlvbigpIHtcblxuICAgIGl0KFwiYmFzaWMgbWF0Y2hpbmcgZm9sZGVyXCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGFzc2VydC5lcXVhbChydW5NYXRjaGVyKFsnL2ZvbyddLCBbJy9mb28vYmFyJ10pLCB0cnVlKTtcblxuICAgIH0pO1xuXG4gICAgaXQoXCJiYXNpYyBtYXRjaGluZyB0YWdcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJ1bk1hdGNoZXIoWydsaW51eCddLCBbJ2xpbnV4J10pLCB0cnVlKTtcblxuICAgIH0pO1xuXG4gICAgaXQoXCJmb2xkZXIgYW5kIHRhZ3NcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJ1bk1hdGNoZXIoWycvZm9vJywgJ2xpbnV4J10sIFsnL2Zvby9iYXInLCAnbGludXgnXSksIHRydWUpO1xuXG4gICAgfSk7XG5cbn0pO1xuIl19