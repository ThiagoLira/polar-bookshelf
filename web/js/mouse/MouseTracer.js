"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class MouseTracer {
    constructor(doc) {
        this.doc = doc;
    }
    start() {
        MouseTracer.startWithinDoc(this.doc);
        this.doc.querySelectorAll("iframe").forEach(iframe => {
            if (!MouseTracer.startWithinIFrame(iframe)) {
                iframe.addEventListener("load", () => {
                    MouseTracer.startWithinIFrame(iframe);
                });
                MouseTracer.startWithinIFrame(iframe);
            }
        });
    }
    static startWithinIFrame(iframe) {
        if (iframe.contentDocument) {
            MouseTracer.startWithinDoc(iframe.contentDocument);
            return true;
        }
        return false;
    }
    static startWithinDoc(doc) {
        doc.addEventListener("mousemove", mouseEvent => {
            const tracerElement = MouseTracer.getOrCreateTracerElement(doc);
            tracerElement.textContent = MouseTracer.format(mouseEvent);
        });
        doc.addEventListener("mouseout", mouseEvent => {
            const tracerElement = MouseTracer.getOrCreateTracerElement(doc);
            const last = tracerElement.textContent;
            tracerElement.textContent = `OUT: ${last}`;
        });
        doc.addEventListener("click", mouseEvent => {
            console.log(`Got mouseEvent at ${doc.location.href}: `, mouseEvent);
        });
    }
    static format(mouseEvent) {
        return `screen: ${mouseEvent.screenX}, ${mouseEvent.screenY} client: ${mouseEvent.clientX}, ${mouseEvent.clientY} page: ${mouseEvent.pageX}, ${mouseEvent.pageY}`;
    }
    static getOrCreateTracerElement(doc) {
        const id = "tracer-element";
        if (doc.getElementById(id)) {
            return doc.getElementById(id);
        }
        const div = doc.createElement("div");
        div.style.cssText = "position: fixed; top: 0px; right: 0px; padding: 5px; background-color: #c6c6c6; z-index: 999999; font-size: 12px; min-width: 18em; min-height: 1em;";
        div.textContent = ' ';
        div.setAttribute("id", id);
        doc.body.appendChild(div);
        return div;
    }
}
exports.MouseTracer = MouseTracer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW91c2VUcmFjZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJNb3VzZVRyYWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBLE1BQWEsV0FBVztJQU9wQixZQUFZLEdBQWlCO1FBQ3pCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ25CLENBQUM7SUFFTSxLQUFLO1FBRVIsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFckMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFFakQsSUFBSSxDQUFFLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFFekMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7b0JBQ2pDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDMUMsQ0FBQyxDQUFDLENBQUM7Z0JBRUgsV0FBVyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3pDO1FBRUwsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDO0lBRU8sTUFBTSxDQUFDLGlCQUFpQixDQUFDLE1BQXlCO1FBRXRELElBQUksTUFBTSxDQUFDLGVBQWUsRUFBRTtZQUN4QixXQUFXLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUNuRCxPQUFPLElBQUksQ0FBQztTQUNmO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFFakIsQ0FBQztJQUVPLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBaUI7UUFFM0MsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUMsRUFBRTtZQUUzQyxNQUFNLGFBQWEsR0FBRyxXQUFXLENBQUMsd0JBQXdCLENBQUMsR0FBRyxDQUFDLENBQUM7WUFJaEUsYUFBYSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRS9ELENBQUMsQ0FBQyxDQUFDO1FBRUgsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsRUFBRTtZQUUxQyxNQUFNLGFBQWEsR0FBRyxXQUFXLENBQUMsd0JBQXdCLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFaEUsTUFBTSxJQUFJLEdBQUcsYUFBYSxDQUFDLFdBQVcsQ0FBQztZQUV2QyxhQUFhLENBQUMsV0FBVyxHQUFHLFFBQVEsSUFBSSxFQUFFLENBQUM7UUFFL0MsQ0FBQyxDQUFDLENBQUM7UUFFSCxHQUFHLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBRXZDLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEdBQUcsQ0FBQyxRQUFTLENBQUMsSUFBSSxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFekUsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDO0lBRU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFzQjtRQUN4QyxPQUFPLFdBQVcsVUFBVSxDQUFDLE9BQU8sS0FBSyxVQUFVLENBQUMsT0FBTyxZQUFZLFVBQVUsQ0FBQyxPQUFPLEtBQUssVUFBVSxDQUFDLE9BQU8sVUFBVSxVQUFVLENBQUMsS0FBSyxLQUFLLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0SyxDQUFDO0lBTU8sTUFBTSxDQUFDLHdCQUF3QixDQUFDLEdBQWlCO1FBRXJELE1BQU0sRUFBRSxHQUFHLGdCQUFnQixDQUFDO1FBRTVCLElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUN4QixPQUFPLEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFFLENBQUM7U0FDbEM7UUFFRCxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXJDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLHFKQUFxSixDQUFDO1FBQzFLLEdBQUcsQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRTNCLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTFCLE9BQU8sR0FBRyxDQUFDO0lBRWYsQ0FBQztDQUVKO0FBbkdELGtDQW1HQyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBDcmVhdGUgYSB2aXN1YWwgaWRlbnRpZmllciBvbiBwYWdlIG9mIHRoZSBjdXJyZW50IG1vdXNlIHBvc2l0aW9uIGZyb20gdGhlXG4gKiBwYWdlIGV2ZW50cy4gIFdlIGFsc28gaW5qZWN0IG91cnNlbHZlcyBpbiBjaGlsZCBpZnJhbWVzLlxuICovXG5leHBvcnQgY2xhc3MgTW91c2VUcmFjZXIge1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBkb2M6IEhUTUxEb2N1bWVudDtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBkb2Mge0RvY3VtZW50fSBUaGUgZG9jdW1lbnQgdG8gd29yayB3aXRoLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGRvYzogSFRNTERvY3VtZW50KSB7XG4gICAgICAgIHRoaXMuZG9jID0gZG9jO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGFydCgpIHtcblxuICAgICAgICBNb3VzZVRyYWNlci5zdGFydFdpdGhpbkRvYyh0aGlzLmRvYyk7XG5cbiAgICAgICAgdGhpcy5kb2MucXVlcnlTZWxlY3RvckFsbChcImlmcmFtZVwiKS5mb3JFYWNoKGlmcmFtZSA9PiB7XG5cbiAgICAgICAgICAgIGlmICghIE1vdXNlVHJhY2VyLnN0YXJ0V2l0aGluSUZyYW1lKGlmcmFtZSkpIHtcblxuICAgICAgICAgICAgICAgIGlmcmFtZS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIE1vdXNlVHJhY2VyLnN0YXJ0V2l0aGluSUZyYW1lKGlmcmFtZSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBNb3VzZVRyYWNlci5zdGFydFdpdGhpbklGcmFtZShpZnJhbWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgc3RhcnRXaXRoaW5JRnJhbWUoaWZyYW1lOiBIVE1MSUZyYW1lRWxlbWVudCk6IGJvb2xlYW4ge1xuXG4gICAgICAgIGlmIChpZnJhbWUuY29udGVudERvY3VtZW50KSB7XG4gICAgICAgICAgICBNb3VzZVRyYWNlci5zdGFydFdpdGhpbkRvYyhpZnJhbWUuY29udGVudERvY3VtZW50KTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgc3RhcnRXaXRoaW5Eb2MoZG9jOiBIVE1MRG9jdW1lbnQpIHtcblxuICAgICAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBtb3VzZUV2ZW50ID0+IHtcblxuICAgICAgICAgICAgY29uc3QgdHJhY2VyRWxlbWVudCA9IE1vdXNlVHJhY2VyLmdldE9yQ3JlYXRlVHJhY2VyRWxlbWVudChkb2MpO1xuXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIkdvdCBtb3VzZUV2ZW50OiBcIiwgbW91c2VFdmVudCk7XG5cbiAgICAgICAgICAgIHRyYWNlckVsZW1lbnQudGV4dENvbnRlbnQgPSBNb3VzZVRyYWNlci5mb3JtYXQobW91c2VFdmVudCk7XG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCBtb3VzZUV2ZW50ID0+IHtcblxuICAgICAgICAgICAgY29uc3QgdHJhY2VyRWxlbWVudCA9IE1vdXNlVHJhY2VyLmdldE9yQ3JlYXRlVHJhY2VyRWxlbWVudChkb2MpO1xuXG4gICAgICAgICAgICBjb25zdCBsYXN0ID0gdHJhY2VyRWxlbWVudC50ZXh0Q29udGVudDtcblxuICAgICAgICAgICAgdHJhY2VyRWxlbWVudC50ZXh0Q29udGVudCA9IGBPVVQ6ICR7bGFzdH1gO1xuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbW91c2VFdmVudCA9PiB7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBHb3QgbW91c2VFdmVudCBhdCAke2RvYy5sb2NhdGlvbiEuaHJlZn06IGAsIG1vdXNlRXZlbnQpO1xuXG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgZm9ybWF0KG1vdXNlRXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgcmV0dXJuIGBzY3JlZW46ICR7bW91c2VFdmVudC5zY3JlZW5YfSwgJHttb3VzZUV2ZW50LnNjcmVlbll9IGNsaWVudDogJHttb3VzZUV2ZW50LmNsaWVudFh9LCAke21vdXNlRXZlbnQuY2xpZW50WX0gcGFnZTogJHttb3VzZUV2ZW50LnBhZ2VYfSwgJHttb3VzZUV2ZW50LnBhZ2VZfWA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtIVE1MRGl2RWxlbWVudH1cbiAgICAgKi9cbiAgICBwcml2YXRlIHN0YXRpYyBnZXRPckNyZWF0ZVRyYWNlckVsZW1lbnQoZG9jOiBIVE1MRG9jdW1lbnQpIHtcblxuICAgICAgICBjb25zdCBpZCA9IFwidHJhY2VyLWVsZW1lbnRcIjtcblxuICAgICAgICBpZiAoZG9jLmdldEVsZW1lbnRCeUlkKGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuIGRvYy5nZXRFbGVtZW50QnlJZChpZCkhO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGl2ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICAgICAgZGl2LnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOiBmaXhlZDsgdG9wOiAwcHg7IHJpZ2h0OiAwcHg7IHBhZGRpbmc6IDVweDsgYmFja2dyb3VuZC1jb2xvcjogI2M2YzZjNjsgei1pbmRleDogOTk5OTk5OyBmb250LXNpemU6IDEycHg7IG1pbi13aWR0aDogMThlbTsgbWluLWhlaWdodDogMWVtO1wiO1xuICAgICAgICBkaXYudGV4dENvbnRlbnQgPSAnICc7XG4gICAgICAgIGRpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpZCk7XG5cbiAgICAgICAgZG9jLmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcblxuICAgICAgICByZXR1cm4gZGl2O1xuXG4gICAgfVxuXG59XG4iXX0=