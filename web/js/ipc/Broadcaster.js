"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const electron_1 = require("electron");
const Logger_1 = require("polar-shared/src/logger/Logger");
const Broadcasters_1 = require("./Broadcasters");
const BrowserWindowReference_1 = require("../ui/dialog_window/BrowserWindowReference");
const log = Logger_1.Logger.create();
class Broadcaster {
    constructor(inputChannel, outputChannel = inputChannel) {
        this.channel = inputChannel;
        electron_1.ipcMain.on(inputChannel, (event, arg) => {
            log.info("Forwarding message: ", inputChannel, event);
            const senderBrowserWindowReference = new BrowserWindowReference_1.BrowserWindowReference(electron_1.BrowserWindow.fromWebContents(event.sender).id);
            Broadcasters_1.Broadcasters.send(outputChannel, arg, senderBrowserWindowReference);
        });
    }
}
exports.Broadcaster = Broadcaster;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJvYWRjYXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJCcm9hZGNhc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHVDQUFnRDtBQUNoRCwyREFBc0Q7QUFDdEQsaURBQTRDO0FBQzVDLHVGQUFrRjtBQUVsRixNQUFNLEdBQUcsR0FBRyxlQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFRNUIsTUFBYSxXQUFXO0lBU3BCLFlBQVksWUFBb0IsRUFBRSxnQkFBd0IsWUFBWTtRQUVsRSxJQUFJLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQztRQUc1QixrQkFBTyxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxLQUFxQixFQUFFLEdBQVEsRUFBRSxFQUFFO1lBRXpELEdBQUcsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLEVBQUcsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRXZELE1BQU0sNEJBQTRCLEdBQzVCLElBQUksK0NBQXNCLENBQUMsd0JBQWEsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBRWpGLDJCQUFZLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxHQUFHLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztRQUV4RSxDQUFDLENBQUMsQ0FBQztJQUVQLENBQUM7Q0FFSjtBQTNCRCxrQ0EyQkMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7QnJvd3NlcldpbmRvdywgaXBjTWFpbn0gZnJvbSAnZWxlY3Ryb24nO1xuaW1wb3J0IHtMb2dnZXJ9IGZyb20gJ3BvbGFyLXNoYXJlZC9zcmMvbG9nZ2VyL0xvZ2dlcic7XG5pbXBvcnQge0Jyb2FkY2FzdGVyc30gZnJvbSAnLi9Ccm9hZGNhc3RlcnMnO1xuaW1wb3J0IHtCcm93c2VyV2luZG93UmVmZXJlbmNlfSBmcm9tICcuLi91aS9kaWFsb2dfd2luZG93L0Jyb3dzZXJXaW5kb3dSZWZlcmVuY2UnO1xuXG5jb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbi8qKlxuICogV2hlbiB3ZSByZWNlaXZlIGEgbWVzc2FnZSwgd2UgYnJvYWRjYXN0IGl0IHRvIGFsbCB0aGUgcmVuZGVyZXJzLiAgQW55b25lIG5vdFxuICogbGlzdGVuaW5nIGp1c3QgZHJvcHMgdGhlIG1lc3NhZ2UuICBUaGlzIG1ha2VzIGl0IGVhc3kgdG8gaW1wbGVtZW50IHZhcmlvdXNcbiAqIGZvcm1zIG9mIG1lc3NhZ2UgY29tbXVuaWNhdGlvbiBidXQgb25lIG9mIHRoZW0gaXMgc2hhcmVkIHN0YXRlIGFjcm9zcyB0aGVcbiAqIHdlYiBicm93c2Vycy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJyb2FkY2FzdGVyIHtcblxuICAgIHByaXZhdGUgY2hhbm5lbDogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaW5wdXRDaGFubmVsIFRoZSBjaGFubmVsIG9mIHRoZSBldmVudCB3ZSdyZSBsaXN0ZW5pbmcgdG8gZm9yIG5ldyBtZXNzYWdlXG4gICAgICogQHBhcmFtIG91dHB1dENoYW5uZWwgVGhlIGNoYW5uZWwgdG8gcmUtc2VuZCB0aGUgZXZlbnQgb24gdG8gb3RoZXIgcmVuZGVyZXIgcHJvY2Vzc2VzLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGlucHV0Q2hhbm5lbDogc3RyaW5nLCBvdXRwdXRDaGFubmVsOiBzdHJpbmcgPSBpbnB1dENoYW5uZWwpIHtcblxuICAgICAgICB0aGlzLmNoYW5uZWwgPSBpbnB1dENoYW5uZWw7XG5cbiAgICAgICAgLy8gVE9ETzogcmVxdWlyZSB0aGF0IHRoaXMgaXMgcmVnaXN0ZXJlZCB2aWEgc3RhcnQgKG5vdCBhdXRvbWF0aWNhbGx5KS5cbiAgICAgICAgaXBjTWFpbi5vbihpbnB1dENoYW5uZWwsIChldmVudDogRWxlY3Ryb24uRXZlbnQsIGFyZzogYW55KSA9PiB7XG5cbiAgICAgICAgICAgIGxvZy5pbmZvKFwiRm9yd2FyZGluZyBtZXNzYWdlOiBcIiAsIGlucHV0Q2hhbm5lbCwgZXZlbnQpO1xuXG4gICAgICAgICAgICBjb25zdCBzZW5kZXJCcm93c2VyV2luZG93UmVmZXJlbmNlXG4gICAgICAgICAgICAgICAgPSBuZXcgQnJvd3NlcldpbmRvd1JlZmVyZW5jZShCcm93c2VyV2luZG93LmZyb21XZWJDb250ZW50cyhldmVudC5zZW5kZXIpLmlkKTtcblxuICAgICAgICAgICAgQnJvYWRjYXN0ZXJzLnNlbmQob3V0cHV0Q2hhbm5lbCwgYXJnLCBzZW5kZXJCcm93c2VyV2luZG93UmVmZXJlbmNlKTtcblxuICAgICAgICB9KTtcblxuICAgIH1cblxufVxuIl19