"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Point_1 = require("../../../Point");
const Rects_1 = require("../../../Rects");
const RectText_1 = require("./RectText");
const TextNodes_1 = require("../selection/TextNodes");
class RectTexts {
    static toRectTexts(textNodes) {
        return textNodes.map(RectTexts.toRectText)
            .filter(current => current.boundingPageRect.width > 0 && current.boundingPageRect.height > 0);
    }
    static toRectText(textNode) {
        const range = TextNodes_1.TextNodes.getRange(textNode);
        const win = textNode.ownerDocument.defaultView;
        const scrollPoint = new Point_1.Point({
            x: win.scrollX,
            y: win.scrollY
        });
        const boundingClientRect = range.getBoundingClientRect();
        let boundingPageRect = Rects_1.Rects.validate(boundingClientRect);
        boundingPageRect = Rects_1.Rects.relativeTo(scrollPoint, boundingPageRect);
        return new RectText_1.RectText({
            clientRects: range.getClientRects(),
            boundingClientRect,
            boundingPageRect,
            text: textNode.textContent
        });
    }
}
exports.RectTexts = RectTexts;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjdFRleHRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUmVjdFRleHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMENBQXFDO0FBRXJDLDBDQUFxQztBQUNyQyx5Q0FBb0M7QUFDcEMsc0RBQWlEO0FBR2pELE1BQWEsU0FBUztJQU1YLE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBaUI7UUFDdkMsT0FBTyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUM7YUFDekIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksT0FBTyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNsSCxDQUFDO0lBU00sTUFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFjO1FBRW5DLE1BQU0sS0FBSyxHQUFHLHFCQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBSTNDLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFjLENBQUMsV0FBWSxDQUFDO1FBRWpELE1BQU0sV0FBVyxHQUFHLElBQUksYUFBSyxDQUFDO1lBQzFCLENBQUMsRUFBRSxHQUFHLENBQUMsT0FBTztZQUNkLENBQUMsRUFBRSxHQUFHLENBQUMsT0FBTztTQUNqQixDQUFDLENBQUM7UUFFSCxNQUFNLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBR3pELElBQUksZ0JBQWdCLEdBQUcsYUFBSyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRTFELGdCQUFnQixHQUFHLGFBQUssQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFFbkUsT0FBTyxJQUFJLG1CQUFRLENBQUM7WUFDaEIsV0FBVyxFQUFFLEtBQUssQ0FBQyxjQUFjLEVBQUU7WUFDbkMsa0JBQWtCO1lBQ2xCLGdCQUFnQjtZQUNoQixJQUFJLEVBQUUsUUFBUSxDQUFDLFdBQVc7U0FDN0IsQ0FBQyxDQUFDO0lBRVAsQ0FBQztDQUVKO0FBL0NELDhCQStDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UG9pbnR9IGZyb20gJy4uLy4uLy4uL1BvaW50JztcbmltcG9ydCB7UmVjdH0gZnJvbSAnLi4vLi4vLi4vUmVjdCc7XG5pbXBvcnQge1JlY3RzfSBmcm9tICcuLi8uLi8uLi9SZWN0cyc7XG5pbXBvcnQge1JlY3RUZXh0fSBmcm9tICcuL1JlY3RUZXh0JztcbmltcG9ydCB7VGV4dE5vZGVzfSBmcm9tICcuLi9zZWxlY3Rpb24vVGV4dE5vZGVzJztcbmltcG9ydCB7T2JqZWN0c30gZnJvbSBcInBvbGFyLXNoYXJlZC9zcmMvdXRpbC9PYmplY3RzXCI7XG5cbmV4cG9ydCBjbGFzcyBSZWN0VGV4dHMge1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdGV4dE5vZGVzXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyB0b1JlY3RUZXh0cyh0ZXh0Tm9kZXM6IE5vZGVbXSkge1xuICAgICAgICByZXR1cm4gdGV4dE5vZGVzLm1hcChSZWN0VGV4dHMudG9SZWN0VGV4dClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoY3VycmVudCA9PiBjdXJyZW50LmJvdW5kaW5nUGFnZVJlY3Qud2lkdGggPiAwICYmIGN1cnJlbnQuYm91bmRpbmdQYWdlUmVjdC5oZWlnaHQgPiAwKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUYWtlIGEgTm9kZSBvZiB0eXBlIFRFWFQgYW5kIGJ1aWxkIGEgUmVjdFRleHQgaW5jbHVkaW5nIHRoZSB0aGUgdGV4dCxcbiAgICAgKiB0aGUgcmVjdHMsIGV0Yy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0ZXh0Tm9kZSB7Tm9kZX1cbiAgICAgKiBAcmV0dXJuIHtSZWN0VGV4dH1cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIHRvUmVjdFRleHQodGV4dE5vZGU6IE5vZGUpIHtcblxuICAgICAgICBjb25zdCByYW5nZSA9IFRleHROb2Rlcy5nZXRSYW5nZSh0ZXh0Tm9kZSk7XG5cbiAgICAgICAgLy8gRklYTUU6IHRoaXMgaXMgd3JvbmcgYW5kIHdlIGFyZSB1c2luZyB0ZWggd3Jvbmcgc2Nyb2xsIHBvc2l0aW9uLlxuXG4gICAgICAgIGNvbnN0IHdpbiA9IHRleHROb2RlLm93bmVyRG9jdW1lbnQhLmRlZmF1bHRWaWV3ITtcblxuICAgICAgICBjb25zdCBzY3JvbGxQb2ludCA9IG5ldyBQb2ludCh7XG4gICAgICAgICAgICB4OiB3aW4uc2Nyb2xsWCxcbiAgICAgICAgICAgIHk6IHdpbi5zY3JvbGxZXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGJvdW5kaW5nQ2xpZW50UmVjdCA9IHJhbmdlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgICAgIC8vIEZJWE1FTCB0aGlzIGlzIHRoZSBidWcgYmVjYXVzZSBpdCBjb3BpZXMgdG9KU09OXG4gICAgICAgIGxldCBib3VuZGluZ1BhZ2VSZWN0ID0gUmVjdHMudmFsaWRhdGUoYm91bmRpbmdDbGllbnRSZWN0KTtcblxuICAgICAgICBib3VuZGluZ1BhZ2VSZWN0ID0gUmVjdHMucmVsYXRpdmVUbyhzY3JvbGxQb2ludCwgYm91bmRpbmdQYWdlUmVjdCk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBSZWN0VGV4dCh7XG4gICAgICAgICAgICBjbGllbnRSZWN0czogcmFuZ2UuZ2V0Q2xpZW50UmVjdHMoKSxcbiAgICAgICAgICAgIGJvdW5kaW5nQ2xpZW50UmVjdCxcbiAgICAgICAgICAgIGJvdW5kaW5nUGFnZVJlY3QsXG4gICAgICAgICAgICB0ZXh0OiB0ZXh0Tm9kZS50ZXh0Q29udGVudFxuICAgICAgICB9KTtcblxuICAgIH1cblxufVxuIl19