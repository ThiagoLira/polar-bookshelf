"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const FilePaths_1 = require("polar-shared/src/util/FilePaths");
const Directories_1 = require("../../../../../datastore/Directories");
const Logger_1 = require("polar-shared/src/logger/Logger");
const electron_1 = require("electron");
const log = Logger_1.Logger.create();
class DocLoaderService {
    constructor(mainAppController) {
        this.directories = new Directories_1.Directories();
        this.mainAppController = mainAppController;
    }
    start() {
        electron_1.ipcMain.on('load-doc-request', (event, loadDocRequest) => {
            const path = FilePaths_1.FilePaths.join(this.directories.stashDir, loadDocRequest.backendFileRef.name);
            this.mainAppController.handleLoadDoc(path, loadDocRequest.newWindow)
                .catch(err => log.error("Unable to load doc: ", err));
        });
    }
}
exports.DocLoaderService = DocLoaderService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRG9jTG9hZGVyU2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkRvY0xvYWRlclNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSwrREFBMEQ7QUFDMUQsc0VBQWlFO0FBQ2pFLDJEQUFzRDtBQUN0RCx1Q0FBaUM7QUFFakMsTUFBTSxHQUFHLEdBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRTVCLE1BQWEsZ0JBQWdCO0lBS3pCLFlBQVksaUJBQW9DO1FBRi9CLGdCQUFXLEdBQUcsSUFBSSx5QkFBVyxFQUFFLENBQUM7UUFHN0MsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO0lBQy9DLENBQUM7SUFFTSxLQUFLO1FBRVIsa0JBQU8sQ0FBQyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxLQUFxQixFQUFFLGNBQThCLEVBQUUsRUFBRTtZQUVyRixNQUFNLElBQUksR0FBRyxxQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxjQUFjLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRTNGLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLGNBQWMsQ0FBQyxTQUFTLENBQUM7aUJBQy9ELEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUU5RCxDQUFDLENBQUMsQ0FBQztJQUVQLENBQUM7Q0FFSjtBQXRCRCw0Q0FzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01haW5BcHBDb250cm9sbGVyfSBmcm9tICcuLi8uLi8uLi9NYWluQXBwQ29udHJvbGxlcic7XG5pbXBvcnQge0xvYWREb2NSZXF1ZXN0fSBmcm9tIFwiLi4vLi4vTG9hZERvY1JlcXVlc3RcIjtcbmltcG9ydCB7RmlsZVBhdGhzfSBmcm9tIFwicG9sYXItc2hhcmVkL3NyYy91dGlsL0ZpbGVQYXRoc1wiO1xuaW1wb3J0IHtEaXJlY3Rvcmllc30gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL2RhdGFzdG9yZS9EaXJlY3Rvcmllc1wiO1xuaW1wb3J0IHtMb2dnZXJ9IGZyb20gXCJwb2xhci1zaGFyZWQvc3JjL2xvZ2dlci9Mb2dnZXJcIjtcbmltcG9ydCB7aXBjTWFpbn0gZnJvbSAnZWxlY3Ryb24nO1xuXG5jb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbmV4cG9ydCBjbGFzcyBEb2NMb2FkZXJTZXJ2aWNlIHtcblxuICAgIHByaXZhdGUgcmVhZG9ubHkgbWFpbkFwcENvbnRyb2xsZXI6IE1haW5BcHBDb250cm9sbGVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZGlyZWN0b3JpZXMgPSBuZXcgRGlyZWN0b3JpZXMoKTtcblxuICAgIGNvbnN0cnVjdG9yKG1haW5BcHBDb250cm9sbGVyOiBNYWluQXBwQ29udHJvbGxlcikge1xuICAgICAgICB0aGlzLm1haW5BcHBDb250cm9sbGVyID0gbWFpbkFwcENvbnRyb2xsZXI7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXJ0KCk6IHZvaWQge1xuXG4gICAgICAgIGlwY01haW4ub24oJ2xvYWQtZG9jLXJlcXVlc3QnLCAoZXZlbnQ6IEVsZWN0cm9uLkV2ZW50LCBsb2FkRG9jUmVxdWVzdDogTG9hZERvY1JlcXVlc3QpID0+IHtcblxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IEZpbGVQYXRocy5qb2luKHRoaXMuZGlyZWN0b3JpZXMuc3Rhc2hEaXIsIGxvYWREb2NSZXF1ZXN0LmJhY2tlbmRGaWxlUmVmLm5hbWUpO1xuXG4gICAgICAgICAgICB0aGlzLm1haW5BcHBDb250cm9sbGVyLmhhbmRsZUxvYWREb2MocGF0aCwgbG9hZERvY1JlcXVlc3QubmV3V2luZG93KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gbG9nLmVycm9yKFwiVW5hYmxlIHRvIGxvYWQgZG9jOiBcIiwgZXJyKSk7XG5cbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbn1cblxuIl19