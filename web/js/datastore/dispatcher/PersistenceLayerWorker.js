"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Logger_1 = require("polar-shared/src/logger/Logger");
const RemotePersistenceLayerFactory_1 = require("../factories/RemotePersistenceLayerFactory");
const log = Logger_1.Logger.create();
process.dlopen = () => {
    throw new Error('Load native module is not safe');
};
RemotePersistenceLayerFactory_1.RemotePersistenceLayerFactory.create();
addEventListener('message', (messageEvent) => {
    const ipcMessage = messageEvent.data;
    if (ipcMessage.type === 'sync') {
    }
    else {
        throw new Error("Unhandled message: " + ipcMessage.type);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGVyc2lzdGVuY2VMYXllcldvcmtlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBlcnNpc3RlbmNlTGF5ZXJXb3JrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwyREFBc0Q7QUFDdEQsOEZBQXlGO0FBRXpGLE1BQU0sR0FBRyxHQUFHLGVBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQVE1QixPQUFPLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtJQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDdEQsQ0FBQyxDQUFDO0FBRUYsNkRBQTZCLENBQUMsTUFBTSxFQUFFLENBQUM7QUFrQnZDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxDQUFDLFlBQVksRUFBRSxFQUFFO0lBRXpDLE1BQU0sVUFBVSxHQUFvQixZQUFZLENBQUMsSUFBSSxDQUFDO0lBRXRELElBQUksVUFBVSxDQUFDLElBQUksS0FBSyxNQUFNLEVBQUU7S0FLL0I7U0FBTTtRQUNILE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzVEO0FBRUwsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0lQQ01lc3NhZ2V9IGZyb20gJy4uLy4uL2lwYy9oYW5kbGVyL0lQQ01lc3NhZ2UnO1xuaW1wb3J0IHtMb2dnZXJ9IGZyb20gJ3BvbGFyLXNoYXJlZC9zcmMvbG9nZ2VyL0xvZ2dlcic7XG5pbXBvcnQge1JlbW90ZVBlcnNpc3RlbmNlTGF5ZXJGYWN0b3J5fSBmcm9tICcuLi9mYWN0b3JpZXMvUmVtb3RlUGVyc2lzdGVuY2VMYXllckZhY3RvcnknO1xuXG5jb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG4vL1xuZGVjbGFyZSB2YXIgcHJvY2VzczogYW55O1xuLy9cbmRlY2xhcmUgdmFyIGV4cG9ydHM6IGFueTtcbi8vXG4vLyBleHBvcnRzID0ge307XG4vL1xucHJvY2Vzcy5kbG9wZW4gPSAoKSA9PiB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdMb2FkIG5hdGl2ZSBtb2R1bGUgaXMgbm90IHNhZmUnKTtcbn07XG5cblJlbW90ZVBlcnNpc3RlbmNlTGF5ZXJGYWN0b3J5LmNyZWF0ZSgpO1xuXG4vLyBjbGFzcyBQZXJzaXN0ZW5jZUxheWVyV29ya2VyIHtcbi8vXG4vLyAgICAgcHJpdmF0ZSByZWFkb25seSBwZXJzaXN0ZW5jZUxheWVyOiBQZXJzaXN0ZW5jZUxheWVyO1xuLy9cbi8vICAgICBjb25zdHJ1Y3RvcigpIHtcbi8vICAgICAgICAgdGhpcy5wZXJzaXN0ZW5jZUxheWVyID0gRWxlY3Ryb25QZXJzaXN0ZW5jZUxheWVyRmFjdG9yeS5jcmVhdGUoKTtcbi8vICAgICB9XG4vL1xuLy8gICAgIGFzeW5jIHN5bmMoZG9jTWV0YVdyaXRlOiBEb2NNZXRhU3luYykge1xuLy8gICAgICAgICAvL2F3YWl0IHRoaXMucGVyc2lzdGVuY2VMYXllci5zeW5jKGRvY01ldGFXcml0ZS5maW5nZXJwcmludCwgZG9jTWV0YVdyaXRlLmRvY01ldGEpO1xuLy8gICAgIH1cbi8vXG4vLyB9XG4vL1xuLy8gbGV0IHBlcnNpc3RlbmNlTGF5ZXJXb3JrZXIgPSBuZXcgUGVyc2lzdGVuY2VMYXllcldvcmtlcigpO1xuLy9cbmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCAobWVzc2FnZUV2ZW50KSA9PiB7XG5cbiAgICBjb25zdCBpcGNNZXNzYWdlOiBJUENNZXNzYWdlPGFueT4gPSBtZXNzYWdlRXZlbnQuZGF0YTtcblxuICAgIGlmIChpcGNNZXNzYWdlLnR5cGUgPT09ICdzeW5jJykge1xuXG4gICAgICAgIC8vIHBlcnNpc3RlbmNlTGF5ZXJXb3JrZXIuc3luYyhtZXNzYWdlRXZlbnQuZGF0YSlcbiAgICAgICAgLy8gICAgIC5jYXRjaChlcnIgPT4gbG9nLmVycm9yKFwiVW5hYmxlIHRvIHdyaXRlIGRvY01ldGE6IFwiLCBlcnIpKVxuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5oYW5kbGVkIG1lc3NhZ2U6IFwiICsgaXBjTWVzc2FnZS50eXBlKTtcbiAgICB9XG5cbn0pO1xuIl19