"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Optional_1 = require("polar-shared/src/util/ts/Optional");
const Logger_1 = require("polar-shared/src/logger/Logger");
const log = Logger_1.Logger.create();
class DatastoreFileCache {
    static writeFile(backend, ref, meta) {
        const key = this.toKey(backend, ref);
        this.backing[key] = Object.assign(Object.assign({}, meta), { backend, ref });
    }
    static getFile(backend, ref, opts) {
        const key = this.toKey(backend, ref);
        const entry = this.backing[key];
        const status = entry ? 'hit' : 'miss';
        log.debug("DatastoreFileCache status: " + status);
        return Optional_1.Optional.of(entry);
    }
    static evictFile(backend, ref) {
        const key = this.toKey(backend, ref);
        delete this.backing[key];
    }
    static toKey(backend, ref) {
        return `${backend}:${ref.name}`;
    }
}
exports.DatastoreFileCache = DatastoreFileCache;
DatastoreFileCache.backing = {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YXN0b3JlRmlsZUNhY2hlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRGF0YXN0b3JlRmlsZUNhY2hlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBSUEsZ0VBQTJEO0FBQzNELDJEQUFzRDtBQUd0RCxNQUFNLEdBQUcsR0FBRyxlQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFVNUIsTUFBYSxrQkFBa0I7SUFJcEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFnQixFQUFFLEdBQVksRUFBRSxJQUFvQjtRQUN4RSxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQ0FBTyxJQUFJLEtBQUUsT0FBTyxFQUFFLEdBQUcsR0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQWdCLEVBQUUsR0FBWSxFQUFFLElBQWtCO1FBQ3BFLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3JDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFaEMsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUV0QyxHQUFHLENBQUMsS0FBSyxDQUFDLDZCQUE2QixHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBRWxELE9BQU8sbUJBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBZ0IsRUFBRSxHQUFZO1FBQ2xELE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFnQixFQUFFLEdBQVk7UUFDL0MsT0FBTyxHQUFHLE9BQU8sSUFBSSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEMsQ0FBQzs7QUEzQkwsZ0RBNkJDO0FBM0IyQiwwQkFBTyxHQUFpQyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RvY0ZpbGVNZXRhfSBmcm9tICcuL0RvY0ZpbGVNZXRhJztcbmltcG9ydCB7QmFja2VuZH0gZnJvbSAncG9sYXItc2hhcmVkL3NyYy9kYXRhc3RvcmUvQmFja2VuZCc7XG5pbXBvcnQge0RvY0ZpbGVVUkxNZXRhfSBmcm9tICcuL0RvY0ZpbGVNZXRhJztcbmltcG9ydCB7R2V0RmlsZU9wdHN9IGZyb20gJy4vRGF0YXN0b3JlJztcbmltcG9ydCB7T3B0aW9uYWx9IGZyb20gJ3BvbGFyLXNoYXJlZC9zcmMvdXRpbC90cy9PcHRpb25hbCc7XG5pbXBvcnQge0xvZ2dlcn0gZnJvbSAncG9sYXItc2hhcmVkL3NyYy9sb2dnZXIvTG9nZ2VyJztcbmltcG9ydCB7RmlsZVJlZn0gZnJvbSBcInBvbGFyLXNoYXJlZC9zcmMvZGF0YXN0b3JlL0ZpbGVSZWZcIjtcblxuY29uc3QgbG9nID0gTG9nZ2VyLmNyZWF0ZSgpO1xuXG4vKipcbiAqIEEgc2ltcGxlIGNhY2hlIHNvIHRoYXQgd2UgY2FuIGltbWVkaWF0ZWx5IG1ha2UgdGhlIGJsb2IgcmVmIGF2YWlsYWJsZSBsb2NhbGx5XG4gKiBldmVuIHRob3VnaCBpdCBoYXMgTk9UIGJlZW4gd3JpdHRlbiB0byB0aGUgZGF0YXN0b3JlIHlldCB0byBhdm9pZCBsYXRlbmN5XG4gKiB3aGVuIHRoZSBkYXRhIGlzIGFscmVhZHkgbG9jYWwuIFdlIG1pZ2h0IHdhbnQgdG8gdGhpbmsgYWJvdXQgdXNpbmcgdGhlXG4gKiBicm93c2VyIGNhY2hlcyBBUEkgaW4gdGhlIGZ1dHVyZSBpbnN0ZWFkIG9mIGZvcmNpbmcgdGhpcyBpbnRvIG1lbW9yeSBidXRcbiAqIGhvbmVzdGx5IHRoaXMgc2hvdWxkIGJlIGltcG9zc2libGUgZm9yIGEgdXNlciB0byBjYXVzZSB0aGUgYnJvd3NlciB0byBydW5cbiAqIG91dCBvZiBtZW1vcnkganVzdCB3aXRoIHRoZWlyIGFubm90YXRpb25zLlxuICovXG5leHBvcnQgY2xhc3MgRGF0YXN0b3JlRmlsZUNhY2hlIHtcblxuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IGJhY2tpbmc6IHtba2V5OiBzdHJpbmddOiBEb2NGaWxlTWV0YX0gPSB7fTtcblxuICAgIHB1YmxpYyBzdGF0aWMgd3JpdGVGaWxlKGJhY2tlbmQ6IEJhY2tlbmQsIHJlZjogRmlsZVJlZiwgbWV0YTogRG9jRmlsZVVSTE1ldGEpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gdGhpcy50b0tleShiYWNrZW5kLCByZWYpO1xuICAgICAgICB0aGlzLmJhY2tpbmdba2V5XSA9IHsuLi5tZXRhLCBiYWNrZW5kLCByZWZ9O1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RmlsZShiYWNrZW5kOiBCYWNrZW5kLCByZWY6IEZpbGVSZWYsIG9wdHM/OiBHZXRGaWxlT3B0cyk6IE9wdGlvbmFsPERvY0ZpbGVNZXRhPiB7XG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMudG9LZXkoYmFja2VuZCwgcmVmKTtcbiAgICAgICAgY29uc3QgZW50cnkgPSB0aGlzLmJhY2tpbmdba2V5XTtcblxuICAgICAgICBjb25zdCBzdGF0dXMgPSBlbnRyeSA/ICdoaXQnIDogJ21pc3MnO1xuXG4gICAgICAgIGxvZy5kZWJ1ZyhcIkRhdGFzdG9yZUZpbGVDYWNoZSBzdGF0dXM6IFwiICsgc3RhdHVzKTtcblxuICAgICAgICByZXR1cm4gT3B0aW9uYWwub2YoZW50cnkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZXZpY3RGaWxlKGJhY2tlbmQ6IEJhY2tlbmQsIHJlZjogRmlsZVJlZikge1xuICAgICAgICBjb25zdCBrZXkgPSB0aGlzLnRvS2V5KGJhY2tlbmQsIHJlZik7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmJhY2tpbmdba2V5XTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyB0b0tleShiYWNrZW5kOiBCYWNrZW5kLCByZWY6IEZpbGVSZWYpIHtcbiAgICAgICAgcmV0dXJuIGAke2JhY2tlbmR9OiR7cmVmLm5hbWV9YDtcbiAgICB9XG5cbn1cbiJdfQ==