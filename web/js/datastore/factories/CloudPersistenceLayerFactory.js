"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Logger_1 = require("polar-shared/src/logger/Logger");
const DefaultPersistenceLayer_1 = require("../DefaultPersistenceLayer");
const AdvertisingPersistenceLayer_1 = require("../advertiser/AdvertisingPersistenceLayer");
const CloudAwareDatastore_1 = require("../CloudAwareDatastore");
const FirebaseDatastore_1 = require("../FirebaseDatastore");
const HybridRemoteDatastores_1 = require("../HybridRemoteDatastores");
const TracedDatastore_1 = require("../TracedDatastore");
const log = Logger_1.Logger.create();
class CloudPersistenceLayerFactory {
    static create() {
        log.info("Using remote persistence layer and cloud aware data store");
        const local = HybridRemoteDatastores_1.HybridRemoteDatastores.create();
        const cloud = new TracedDatastore_1.TracedDatastore(new FirebaseDatastore_1.FirebaseDatastore(), 'traced-firebase');
        const datastore = new CloudAwareDatastore_1.CloudAwareDatastore(local, cloud);
        const defaultPersistenceLayer = new DefaultPersistenceLayer_1.DefaultPersistenceLayer(datastore);
        const advertisingPersistenceLayer = new AdvertisingPersistenceLayer_1.AdvertisingPersistenceLayer(defaultPersistenceLayer);
        return advertisingPersistenceLayer;
    }
}
exports.CloudPersistenceLayerFactory = CloudPersistenceLayerFactory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xvdWRQZXJzaXN0ZW5jZUxheWVyRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNsb3VkUGVyc2lzdGVuY2VMYXllckZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyREFBc0Q7QUFFdEQsd0VBQW1FO0FBQ25FLDJGQUFzRjtBQUN0RixnRUFBMkQ7QUFDM0QsNERBQXVEO0FBQ3ZELHNFQUFpRTtBQUNqRSx3REFBbUQ7QUFFbkQsTUFBTSxHQUFHLEdBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRTVCLE1BQWEsNEJBQTRCO0lBRTlCLE1BQU0sQ0FBQyxNQUFNO1FBRWhCLEdBQUcsQ0FBQyxJQUFJLENBQUMsMkRBQTJELENBQUMsQ0FBQztRQUV0RSxNQUFNLEtBQUssR0FBRywrQ0FBc0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUU5QyxNQUFNLEtBQUssR0FBRyxJQUFJLGlDQUFlLENBQUMsSUFBSSxxQ0FBaUIsRUFBRSxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFFOUUsTUFBTSxTQUFTLEdBQUcsSUFBSSx5Q0FBbUIsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEQsTUFBTSx1QkFBdUIsR0FBRyxJQUFJLGlEQUF1QixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXZFLE1BQU0sMkJBQTJCLEdBQUcsSUFBSSx5REFBMkIsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBRTdGLE9BQU8sMkJBQTJCLENBQUM7SUFFdkMsQ0FBQztDQUVKO0FBcEJELG9FQW9CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TG9nZ2VyfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL2xvZ2dlci9Mb2dnZXInO1xuaW1wb3J0IHtMaXN0ZW5hYmxlUGVyc2lzdGVuY2VMYXllcn0gZnJvbSAnLi4vTGlzdGVuYWJsZVBlcnNpc3RlbmNlTGF5ZXInO1xuaW1wb3J0IHtEZWZhdWx0UGVyc2lzdGVuY2VMYXllcn0gZnJvbSAnLi4vRGVmYXVsdFBlcnNpc3RlbmNlTGF5ZXInO1xuaW1wb3J0IHtBZHZlcnRpc2luZ1BlcnNpc3RlbmNlTGF5ZXJ9IGZyb20gJy4uL2FkdmVydGlzZXIvQWR2ZXJ0aXNpbmdQZXJzaXN0ZW5jZUxheWVyJztcbmltcG9ydCB7Q2xvdWRBd2FyZURhdGFzdG9yZX0gZnJvbSAnLi4vQ2xvdWRBd2FyZURhdGFzdG9yZSc7XG5pbXBvcnQge0ZpcmViYXNlRGF0YXN0b3JlfSBmcm9tICcuLi9GaXJlYmFzZURhdGFzdG9yZSc7XG5pbXBvcnQge0h5YnJpZFJlbW90ZURhdGFzdG9yZXN9IGZyb20gJy4uL0h5YnJpZFJlbW90ZURhdGFzdG9yZXMnO1xuaW1wb3J0IHtUcmFjZWREYXRhc3RvcmV9IGZyb20gJy4uL1RyYWNlZERhdGFzdG9yZSc7XG5cbmNvbnN0IGxvZyA9IExvZ2dlci5jcmVhdGUoKTtcblxuZXhwb3J0IGNsYXNzIENsb3VkUGVyc2lzdGVuY2VMYXllckZhY3Rvcnkge1xuXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGUoKTogTGlzdGVuYWJsZVBlcnNpc3RlbmNlTGF5ZXIge1xuXG4gICAgICAgIGxvZy5pbmZvKFwiVXNpbmcgcmVtb3RlIHBlcnNpc3RlbmNlIGxheWVyIGFuZCBjbG91ZCBhd2FyZSBkYXRhIHN0b3JlXCIpO1xuXG4gICAgICAgIGNvbnN0IGxvY2FsID0gSHlicmlkUmVtb3RlRGF0YXN0b3Jlcy5jcmVhdGUoKTtcblxuICAgICAgICBjb25zdCBjbG91ZCA9IG5ldyBUcmFjZWREYXRhc3RvcmUobmV3IEZpcmViYXNlRGF0YXN0b3JlKCksICd0cmFjZWQtZmlyZWJhc2UnKTtcblxuICAgICAgICBjb25zdCBkYXRhc3RvcmUgPSBuZXcgQ2xvdWRBd2FyZURhdGFzdG9yZShsb2NhbCwgY2xvdWQpO1xuXG4gICAgICAgIGNvbnN0IGRlZmF1bHRQZXJzaXN0ZW5jZUxheWVyID0gbmV3IERlZmF1bHRQZXJzaXN0ZW5jZUxheWVyKGRhdGFzdG9yZSk7XG5cbiAgICAgICAgY29uc3QgYWR2ZXJ0aXNpbmdQZXJzaXN0ZW5jZUxheWVyID0gbmV3IEFkdmVydGlzaW5nUGVyc2lzdGVuY2VMYXllcihkZWZhdWx0UGVyc2lzdGVuY2VMYXllcik7XG5cbiAgICAgICAgcmV0dXJuIGFkdmVydGlzaW5nUGVyc2lzdGVuY2VMYXllcjtcblxuICAgIH1cblxufVxuIl19