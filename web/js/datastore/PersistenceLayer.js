"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGVyc2lzdGVuY2VMYXllci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBlcnNpc3RlbmNlTGF5ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RG9jTWV0YUZpbGVSZWYsIERvY01ldGFSZWZ9IGZyb20gJy4vRG9jTWV0YVJlZic7XG5pbXBvcnQge0JpbmFyeUZpbGVEYXRhLCBEYXRhc3RvcmUsIERlbGV0ZVJlc3VsdCwgRG9jTWV0YVNuYXBzaG90RXZlbnRMaXN0ZW5lciwgRXJyb3JMaXN0ZW5lciwgU25hcHNob3RSZXN1bHR9IGZyb20gJy4vRGF0YXN0b3JlJztcbmltcG9ydCB7V3JpdGVGaWxlT3B0c30gZnJvbSAnLi9EYXRhc3RvcmUnO1xuaW1wb3J0IHtHZXRGaWxlT3B0c30gZnJvbSAnLi9EYXRhc3RvcmUnO1xuaW1wb3J0IHtEYXRhc3RvcmVPdmVydmlld30gZnJvbSAnLi9EYXRhc3RvcmUnO1xuaW1wb3J0IHtEYXRhc3RvcmVDYXBhYmlsaXRpZXN9IGZyb20gJy4vRGF0YXN0b3JlJztcbmltcG9ydCB7RGF0YXN0b3JlSW5pdE9wdHN9IGZyb20gJy4vRGF0YXN0b3JlJztcbmltcG9ydCB7QmFja2VuZEZpbGVSZWZEYXRhfSBmcm9tICcuL0RhdGFzdG9yZSc7XG5pbXBvcnQge0RvY01ldGF9IGZyb20gJy4uL21ldGFkYXRhL0RvY01ldGEnO1xuaW1wb3J0IHtCYWNrZW5kfSBmcm9tICdwb2xhci1zaGFyZWQvc3JjL2RhdGFzdG9yZS9CYWNrZW5kJztcbmltcG9ydCB7RG9jRmlsZU1ldGF9IGZyb20gJy4vRG9jRmlsZU1ldGEnO1xuaW1wb3J0IHtPcHRpb25hbH0gZnJvbSAncG9sYXItc2hhcmVkL3NyYy91dGlsL3RzL09wdGlvbmFsJztcbmltcG9ydCB7RG9jSW5mb30gZnJvbSAnLi4vbWV0YWRhdGEvRG9jSW5mbyc7XG5pbXBvcnQge0RhdGFzdG9yZU11dGF0aW9ufSBmcm9tICcuL0RhdGFzdG9yZU11dGF0aW9uJztcbmltcG9ydCB7R3JvdXBJRFN0cn0gZnJvbSAnLi9EYXRhc3RvcmUnO1xuaW1wb3J0IHtJRG9jSW5mb30gZnJvbSBcInBvbGFyLXNoYXJlZC9zcmMvbWV0YWRhdGEvSURvY0luZm9cIjtcbmltcG9ydCB7SURvY01ldGF9IGZyb20gXCJwb2xhci1zaGFyZWQvc3JjL21ldGFkYXRhL0lEb2NNZXRhXCI7XG5pbXBvcnQge1Zpc2liaWxpdHl9IGZyb20gXCJwb2xhci1zaGFyZWQvc3JjL2RhdGFzdG9yZS9WaXNpYmlsaXR5XCI7XG5pbXBvcnQge0ZpbGVSZWZ9IGZyb20gXCJwb2xhci1zaGFyZWQvc3JjL2RhdGFzdG9yZS9GaWxlUmVmXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGVyc2lzdGVuY2VMYXllciB7XG5cbiAgICByZWFkb25seSBpZDogUGVyc2lzdGVuY2VMYXllcklEO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHVuZGVybHlpbmcgZGF0YXN0b3JlIGJhY2tpbmcgdGhpcyBwZXJzaXN0ZW5jZSBsYXllci5cbiAgICAgKi9cbiAgICByZWFkb25seSBkYXRhc3RvcmU6IERhdGFzdG9yZTtcblxuICAgIGluaXQoZXJyb3JMaXN0ZW5lcj86IEVycm9yTGlzdGVuZXIsIG9wdHM/OiBEYXRhc3RvcmVJbml0T3B0cyk6IFByb21pc2U8dm9pZD47XG5cbiAgICBzdG9wKCk6IFByb21pc2U8dm9pZD47XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdHJ1ZSBpZiB0aGUgRGlza0RhdGFzdG9yZSBjb250YWlucyBhIGRvY3VtZW50IGZvciB0aGUgZ2l2ZW5cbiAgICAgKiBmaW5nZXJwcmludC5cbiAgICAgKi9cbiAgICBjb250YWlucyhmaW5nZXJwcmludDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcblxuICAgIGdldERvY01ldGEoZmluZ2VycHJpbnQ6IHN0cmluZyk6IFByb21pc2U8SURvY01ldGF8IHVuZGVmaW5lZD47XG5cbiAgICBnZXREb2NNZXRhUmVmcygpOiBQcm9taXNlPERvY01ldGFSZWZbXT47XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjdXJyZW50IHNuYXBzaG90IG9mIHRoZSBpbnRlcm5hbCBzdGF0ZSBvZiB0aGUgRGF0YXN0b3JlIGJ5XG4gICAgICogcmVjZWl2aW5nIERvY01ldGFTbmFwc2hvdEV2ZW50IG9uIHRoZSBpbml0aWFsIHN0YXRlLlxuICAgICAqL1xuICAgIHNuYXBzaG90KGxpc3RlbmVyOiBEb2NNZXRhU25hcHNob3RFdmVudExpc3RlbmVyLCBlcnJvckxpc3RlbmVyPzogRXJyb3JMaXN0ZW5lcik6IFByb21pc2U8U25hcHNob3RSZXN1bHQ+O1xuXG4gICAgY3JlYXRlQmFja3VwKCk6IFByb21pc2U8dm9pZD47XG5cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSBmaWxlIGZyb20gUGVyc2lzdGVuY2VMYXllci5cbiAgICAgKi9cbiAgICBkZWxldGUoZG9jTWV0YUZpbGVSZWY6IERvY01ldGFGaWxlUmVmLCBkYXRhc3RvcmVNdXRhdGlvbj86IERhdGFzdG9yZU11dGF0aW9uPGJvb2xlYW4+KTogUHJvbWlzZTxEZWxldGVSZXN1bHQ+O1xuXG4gICAgd3JpdGVEb2NNZXRhKGRvY01ldGE6IElEb2NNZXRhLCBkYXRhc3RvcmVNdXRhdGlvbj86IERhdGFzdG9yZU11dGF0aW9uPElEb2NJbmZvPik6IFByb21pc2U8SURvY0luZm8+O1xuXG4gICAgLyoqXG4gICAgICogTWFrZSBzdXJlIHRoZSBkb2NzIHdpdGggdGhlIGdpdmVuIGZpbmdlcnByaW50cyBhcmUgc3luY2hyb25pemVkIHdpdGhcbiAgICAgKiB0aGlzIGRhdGFzdG9yZS4gT25seSBpbXBsZW1lbnRlZCBpbiBjbG91ZCBkYXRhc3RvcmVzLlxuICAgICAqL1xuICAgIHN5bmNocm9uaXplRG9jcyguLi5kb2NNZXRhUmVmczogRG9jTWV0YVJlZltdKTogUHJvbWlzZTx2b2lkPjtcblxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgRG9jSW5mbyB3cml0dGVuLiBUaGUgRG9jSW5mbyBtYXkgYmUgdXBkYXRlZCBvbiBjb21taXRcbiAgICAgKiBpbmNsdWRpbmcgdXBkYXRpbmcgbGFzdFVwZGF0ZWQsIGV0Yy5cbiAgICAgKi9cbiAgICB3cml0ZShmaW5nZXJwcmludDogc3RyaW5nLCBkb2NNZXRhOiBJRG9jTWV0YSwgb3B0cz86IFdyaXRlT3B0cyk6IFByb21pc2U8SURvY0luZm8+O1xuXG4gICAgd3JpdGVGaWxlKGJhY2tlbmQ6IEJhY2tlbmQsXG4gICAgICAgICAgICAgIHJlZjogRmlsZVJlZixcbiAgICAgICAgICAgICAgZGF0YTogQmluYXJ5RmlsZURhdGEsXG4gICAgICAgICAgICAgIG9wdHM/OiBXcml0ZUZpbGVPcHRzKTogUHJvbWlzZTxEb2NGaWxlTWV0YT47XG5cbiAgICBnZXRGaWxlKGJhY2tlbmQ6IEJhY2tlbmQsIHJlZjogRmlsZVJlZiwgb3B0cz86IEdldEZpbGVPcHRzKTogRG9jRmlsZU1ldGE7XG5cbiAgICBjb250YWluc0ZpbGUoYmFja2VuZDogQmFja2VuZCwgcmVmOiBGaWxlUmVmKTogUHJvbWlzZTxib29sZWFuPjtcblxuICAgIGRlbGV0ZUZpbGUoYmFja2VuZDogQmFja2VuZCwgcmVmOiBGaWxlUmVmKTogUHJvbWlzZTx2b2lkPjtcblxuICAgIGFkZERvY01ldGFTbmFwc2hvdEV2ZW50TGlzdGVuZXIoZG9jTWV0YVNuYXBzaG90RXZlbnRMaXN0ZW5lcjogRG9jTWV0YVNuYXBzaG90RXZlbnRMaXN0ZW5lcik6IHZvaWQ7XG5cbiAgICBkZWFjdGl2YXRlKCk6IFByb21pc2U8dm9pZD47XG5cbiAgICBvdmVydmlldygpOiBQcm9taXNlPERhdGFzdG9yZU92ZXJ2aWV3ICB8IHVuZGVmaW5lZD47XG5cbiAgICBjYXBhYmlsaXRpZXMoKTogRGF0YXN0b3JlQ2FwYWJpbGl0aWVzO1xuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgV3JpdGVPcHRzIHtcblxuICAgIHJlYWRvbmx5IGRhdGFzdG9yZU11dGF0aW9uPzogRGF0YXN0b3JlTXV0YXRpb248SURvY0luZm8+O1xuXG4gICAgLyoqXG4gICAgICogQWxzbyB3cml0ZSBhIGZpbGUgKFBERiwgUEhaKSB3aXRoIHRoZSBEb2NNZXRhIGRhdGEgc28gdGhhdCBpdCdzIGF0b21pY1xuICAgICAqIGFuZCB0aGF0IHRoZSBvcGVyYXRpb25zIGFyZSBvcmRlcmVkIHByb3Blcmx5LlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHdyaXRlRmlsZT86IEJhY2tlbmRGaWxlUmVmRGF0YTtcblxuICAgIHJlYWRvbmx5IHZpc2liaWxpdHk/OiBWaXNpYmlsaXR5O1xuXG4gICAgcmVhZG9ubHkgZ3JvdXBzPzogUmVhZG9ubHlBcnJheTxHcm91cElEU3RyPjtcblxufVxuXG5leHBvcnQgdHlwZSBQZXJzaXN0ZW5jZUxheWVySUQgPSBzdHJpbmc7XG5cbmV4cG9ydCB0eXBlIFBlcnNpc3RlbmNlTGF5ZXJQcm92aWRlciA9ICgpID0+IFBlcnNpc3RlbmNlTGF5ZXI7XG5cblxuIl19