"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const electron_1 = require("electron");
const Logger_1 = require("polar-shared/src/logger/Logger");
const SimpleReactor_1 = require("../../reactor/SimpleReactor");
const log = Logger_1.Logger.create();
class DocInfoAdvertisementListenerService {
    constructor() {
        this.reactor = new SimpleReactor_1.SimpleReactor();
        this.listener = this.onDocInfoAdvertisement.bind(this);
    }
    start() {
        electron_1.ipcRenderer.on('doc-info-advertisement', this.listener);
    }
    stop() {
        electron_1.ipcRenderer.removeListener('doc-info-advertisement', this.listener);
    }
    onDocInfoAdvertisement(event, docInfoAdvertisement) {
        log.debug("Received new DocInfo advertisement: ", docInfoAdvertisement);
        this.reactor.dispatchEvent(docInfoAdvertisement);
    }
    addEventListener(docInfoAdvertisementListener) {
        this.reactor.addEventListener(docInfoAdvertisementListener);
    }
}
exports.DocInfoAdvertisementListenerService = DocInfoAdvertisementListenerService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRG9jSW5mb0FkdmVydGlzZW1lbnRMaXN0ZW5lclNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJEb2NJbmZvQWR2ZXJ0aXNlbWVudExpc3RlbmVyU2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFxQztBQUVyQywyREFBc0Q7QUFDdEQsK0RBQTBEO0FBRTFELE1BQU0sR0FBRyxHQUFHLGVBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUU1QixNQUFhLG1DQUFtQztJQU01QztRQUppQixZQUFPLEdBQXdDLElBQUksNkJBQWEsRUFBRSxDQUFDO1FBS2hGLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRU0sS0FBSztRQUNSLHNCQUFXLENBQUMsRUFBRSxDQUFDLHdCQUF3QixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRU0sSUFBSTtRQUNQLHNCQUFXLENBQUMsY0FBYyxDQUFDLHdCQUF3QixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU8sc0JBQXNCLENBQUMsS0FBVSxFQUFFLG9CQUEwQztRQUNqRixHQUFHLENBQUMsS0FBSyxDQUFDLHNDQUFzQyxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRU0sZ0JBQWdCLENBQUMsNEJBQTBEO1FBQzlFLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsNEJBQTRCLENBQUMsQ0FBQztJQUNoRSxDQUFDO0NBRUo7QUEzQkQsa0ZBMkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpcGNSZW5kZXJlcn0gZnJvbSAnZWxlY3Ryb24nO1xuaW1wb3J0IHtEb2NJbmZvQWR2ZXJ0aXNlbWVudCwgRG9jSW5mb0FkdmVydGlzZW1lbnRMaXN0ZW5lcn0gZnJvbSAnLi9Eb2NJbmZvQWR2ZXJ0aXNlbWVudCc7XG5pbXBvcnQge0xvZ2dlcn0gZnJvbSAncG9sYXItc2hhcmVkL3NyYy9sb2dnZXIvTG9nZ2VyJztcbmltcG9ydCB7U2ltcGxlUmVhY3Rvcn0gZnJvbSAnLi4vLi4vcmVhY3Rvci9TaW1wbGVSZWFjdG9yJztcblxuY29uc3QgbG9nID0gTG9nZ2VyLmNyZWF0ZSgpO1xuXG5leHBvcnQgY2xhc3MgRG9jSW5mb0FkdmVydGlzZW1lbnRMaXN0ZW5lclNlcnZpY2Uge1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSByZWFjdG9yOiBTaW1wbGVSZWFjdG9yPERvY0luZm9BZHZlcnRpc2VtZW50PiA9IG5ldyBTaW1wbGVSZWFjdG9yKCk7XG5cbiAgICBwcml2YXRlIGxpc3RlbmVyOiAoZXZlbnQ6IGFueSwgZG9jSW5mb0FkdmVydGlzZW1lbnQ6IERvY0luZm9BZHZlcnRpc2VtZW50KSA9PiB2b2lkO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIgPSB0aGlzLm9uRG9jSW5mb0FkdmVydGlzZW1lbnQuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhcnQoKTogdm9pZCB7XG4gICAgICAgIGlwY1JlbmRlcmVyLm9uKCdkb2MtaW5mby1hZHZlcnRpc2VtZW50JywgdGhpcy5saXN0ZW5lcik7XG4gICAgfVxuXG4gICAgcHVibGljIHN0b3AoKTogdm9pZCB7XG4gICAgICAgIGlwY1JlbmRlcmVyLnJlbW92ZUxpc3RlbmVyKCdkb2MtaW5mby1hZHZlcnRpc2VtZW50JywgdGhpcy5saXN0ZW5lcik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkRvY0luZm9BZHZlcnRpc2VtZW50KGV2ZW50OiBhbnksIGRvY0luZm9BZHZlcnRpc2VtZW50OiBEb2NJbmZvQWR2ZXJ0aXNlbWVudCkge1xuICAgICAgICBsb2cuZGVidWcoXCJSZWNlaXZlZCBuZXcgRG9jSW5mbyBhZHZlcnRpc2VtZW50OiBcIiwgZG9jSW5mb0FkdmVydGlzZW1lbnQpO1xuICAgICAgICB0aGlzLnJlYWN0b3IuZGlzcGF0Y2hFdmVudChkb2NJbmZvQWR2ZXJ0aXNlbWVudCk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEV2ZW50TGlzdGVuZXIoZG9jSW5mb0FkdmVydGlzZW1lbnRMaXN0ZW5lcjogRG9jSW5mb0FkdmVydGlzZW1lbnRMaXN0ZW5lcik6IHZvaWQge1xuICAgICAgICB0aGlzLnJlYWN0b3IuYWRkRXZlbnRMaXN0ZW5lcihkb2NJbmZvQWR2ZXJ0aXNlbWVudExpc3RlbmVyKTtcbiAgICB9XG5cbn1cbiJdfQ==