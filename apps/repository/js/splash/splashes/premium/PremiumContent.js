"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const SplitLayout_1 = require("../../../../../../web/js/ui/split_layout/SplitLayout");
const SplitLayoutRight_1 = require("../../../../../../web/js/ui/split_layout/SplitLayoutRight");
const CallToActionLink_1 = require("../components/CallToActionLink");
class PremiumContent extends react_1.default.Component {
    constructor(props) {
        super(props);
    }
    render() {
        const Icon = (props) => {
            return (react_1.default.createElement("div", { className: "text-primary m-3" },
                react_1.default.createElement("i", { style: { fontSize: '85px' }, className: props.className })));
        };
        const FeatureTitle = (props) => {
            return (react_1.default.createElement("h4", null,
                react_1.default.createElement("b", null, props.children)));
        };
        const Feature = (props) => {
            return (react_1.default.createElement("div", { className: "text-center ml-auto mr-auto p-1", style: { maxWidth: '33%' } }, props.children));
        };
        const FeatureText = (props) => {
            return (react_1.default.createElement("p", { style: { fontSize: '16px' } }, props.children));
        };
        const PurchaseLink = (props) => {
            return (react_1.default.createElement("div", { className: "ml-auto mr-auto" },
                react_1.default.createElement(CallToActionLink_1.CallToActionLink, { eventCategory: props.eventCategory, href: props.href }, props.children)));
        };
        const AdditionalFeature = (props) => {
            return (react_1.default.createElement("div", null,
                react_1.default.createElement("i", { style: { color: '#FF851B' }, className: "fas fa-check-circle" }),
                "\u00A0",
                props.children));
        };
        return (react_1.default.createElement("div", null,
            react_1.default.createElement(SplitLayout_1.SplitLayout, null,
                react_1.default.createElement(SplitLayout_1.SplitLayoutLeft, null,
                    react_1.default.createElement("h1", { className: "mb-4" },
                        "Upgrade to ",
                        react_1.default.createElement("b", null, "Polar Premium!")),
                    react_1.default.createElement("p", { className: "h5" },
                        react_1.default.createElement("b", null, "Polar Premium"),
                        " gives you extended ",
                        react_1.default.createElement("i", null, "cloud storage"),
                        ", special benefits, and directly supports future Polar development. The more Polar is user-supported, the freer we are to make Polar the best it can be."),
                    react_1.default.createElement("p", { className: "h5" },
                        "All for less than the prices of a ",
                        react_1.default.createElement("b", null, "cup of coffee!"))),
                react_1.default.createElement(SplitLayoutRight_1.SplitLayoutRight, null,
                    react_1.default.createElement("img", { style: { maxHeight: '175px' }, src: "/icon.png" }))),
            react_1.default.createElement("h2", { className: "text-left mt-0 mb-1" }, "Here's what you get with Polar Premium:"),
            react_1.default.createElement("div", { style: {
                    display: 'flex',
                    marginLeft: 'auto',
                    marginRight: 'auto'
                } },
                react_1.default.createElement(Feature, null,
                    react_1.default.createElement(Icon, { className: "fas fa-cloud-upload-alt" }),
                    react_1.default.createElement(FeatureTitle, null, "Cloud Storage"),
                    react_1.default.createElement(FeatureText, null,
                        "Extended cloud storage.  Up to ",
                        react_1.default.createElement("b", null, "2GB"),
                        " with bronze and ",
                        react_1.default.createElement("b", null, "5GB"),
                        " with silver. Your cloud storage will also work on the web and mobile versions of Polar available in ",
                        react_1.default.createElement("i", null, "Q2 2019"),
                        ".")),
                react_1.default.createElement(Feature, null,
                    react_1.default.createElement(Icon, { className: "fas fa-handshake" }),
                    react_1.default.createElement(FeatureTitle, null, "Support Polar"),
                    react_1.default.createElement(FeatureText, null, "Support continued Polar development including EPUB, web, tablet, and mobile versions including Android and iOS.")),
                react_1.default.createElement(Feature, null,
                    react_1.default.createElement(Icon, { className: "fas fa-ribbon" }),
                    react_1.default.createElement(FeatureTitle, null, "Members-Only Lounge"),
                    react_1.default.createElement(FeatureText, null, "As a Premium member, you\u2019ll gain access to an exclusive Polar members-only community.  We will prioritize features and feedback from this community since it directly supports Polar."))),
            react_1.default.createElement("div", { className: "mb-1 ml-auto mr-auto", style: { display: 'flex' } },
                react_1.default.createElement("div", null,
                    react_1.default.createElement("div", { className: "mt-1 mb-2" },
                        react_1.default.createElement("h3", null, "Additional Features Include:")),
                    react_1.default.createElement("div", { className: "h5", style: { marginLeft: '25px' } },
                        react_1.default.createElement(AdditionalFeature, null, "Prioritized feature requests and support."),
                        react_1.default.createElement(AdditionalFeature, null, "First dibs on Polar team and account names when they ship."),
                        react_1.default.createElement(AdditionalFeature, null, "Support independent Open Source development.")))),
            react_1.default.createElement("div", { className: "mt-2 mb-2", style: { display: 'flex' } },
                react_1.default.createElement(PurchaseLink, { href: "https://opencollective.com/polar-bookshelf/contribute/tier/6659-bronze", eventCategory: "splash-polar-premium-bronze" }, "Purchase Bronze $4.99 per month"),
                react_1.default.createElement(PurchaseLink, { href: "https://opencollective.com/polar-bookshelf/contribute/tier/6661-silver", eventCategory: "splash-polar-premium-silver" }, "Purchase Silver $9.99 per month"))));
    }
}
exports.PremiumContent = PremiumContent;
//# sourceMappingURL=data:application/json;base64,